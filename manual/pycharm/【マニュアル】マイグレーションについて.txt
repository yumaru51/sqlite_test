

【手動でDB定義変更して、マイグレーションごまかす方法！②は不要かも】
①　ファイル―モデル
　　最初はモデルの通りにファイルが作られる。
　　2回目以降、モデルとマイグレーションファイルを比較して、差分をマイグレーションファイルとして生成
②　マイグレーションテーブル(メイン)とマイグレーションファイルを比較して差分がレコード追加される。
　　マイグレーションファイルよりDB定義を更新する。
③　ファイル―DB
　　マイグレーションテーブル(アプリ)とマイグレーションファイルを比較して差分がレコード追加される。
　　マイグレーションファイルよりDB定義を更新する。


【テーブル再作成】
①SQLSERVERからDBを削除
②SQLSERVERにDBを作成、ユーザー作成「db_owner」権限付与、
③アプリフォルダ内のマイグレーションファイル消す（番号付き）
④マイグレート
python manage.py makemigrations
python manage.py migrate --database=quality_change_management

※テーブルから作れない場合、アプリから新規で作り直したほうがよい。
　①アプリフォルダ、テンプレートなどバックアップを取っておく。(staticなど外にファイルがある場合もあるので注意)
　②マスターからブランチ作成して新規アプリ作成。「python manage.py startapp アプリ名」
　③setting.pyのINSTALLED_APPSに追加、DATABASESに追加
　④db_router.pyに読込・書込・参照・マイグレート可能なDBの設定を行う
　⑤models.pyのみバックアップから復元してテーブルの再作成を行う。
　⑥各ファイルGit監視ファイルにaddすること。
