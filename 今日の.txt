
①
↓まとめる。
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = Path(__file__).resolve().parent.parent

configフォルダにDBが作られてしまった。。。
一個上の階層にしたい。（たぶんformがあったので変更管理ツールだけ。）


1.os.path.abspath(__file__)は、現在実行中のPythonファイルの絶対パスを取得します。
（settign.pyに定義されているので、現在実行中(=カレントディレクトリ)はsetting.pyがあるパス）

2.os.path.dirname(os.path.abspath(__file__))は、Pythonファイルの絶対パスの親ディレクトリの絶対パスを取得します。

3.os.path.dirname(os.path.dirname(os.path.abspath(__file__)))は、親ディレクトリの絶対パスの親ディレクトリの絶対パスを取得します。つまり、Pythonプロジェクトのルートディレクトリの絶対パスが取得されます。

このようにして、BASE_DIR変数にはPythonプロジェクトのルートディレクトリの絶対パスが格納されます。この値を使用することで、プロジェクト内の他のファイルやディレクトリに簡単にアクセスできます。

この定義は、settings.pyファイルの親ディレクトリのパスを取得して、それをBASE_DIRに設定しています。つまり、デフォルトでは、BASE_DIRはsettings.pyファイルが存在するディレクトリの1つ上のディレクトリになります。

settingをフォルダに格納するので、更に一個追加で囲む。


②
外部参照キー関連名称
　「参照先テーブル (referenced table)」
　「参照元テーブル (referencing table)」


③
承認者

品質・安全変更管理ツール　フォルダまとめる

事前
・templatesのフォルダ
・appフォルダ
・js
・css
・ライブラリ確認
・マイグレーション
・settings.py
・db_router.py

当日
・configのurls.py
・top_page.html
・
・
・

④
順番
【品質・安全変更管理ツール】
　1.Action,Page,Request,Step,Target
　2.その他
【fms】
　1.,,,,,,,,,
　2.この中で更に上位があるかどうか。
　ApplicationClassMaster,AmountUnitMaster,
　BusinessYearMaster,BudgetClassMaster,BudgetConditionMaster,
　ConcentrationUnitMaster,CheckList,CheckItemMaster,
　DepartmentMaster,
　EvaluationCriteriaMaster,EvaluationPointMaster,ExchangeTypeMaster,
　FunctionMaster,
　MPlanBasisMaster,MaterialStateMaster,MaintenanceEstimateStatusMaster,
　PeriodClassMaster,ProcessMaster,PurposeClassMaster,PlanClassMaster,PressureUnitMaster,Phenomenon,
　RegulationMaster,
　StepMaster,
　TargetMaster,
　User,
　WorkClassMaster,
　3.その他


他に特殊型あるかなぁ。。。。

