# Generated by Django 2.1.15 on 2023-03-28 06:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActionMaster',
            fields=[
                ('action_cd', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='作業CD')),
                ('action_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='作業名')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('status_after_action', models.CharField(blank=True, max_length=20, null=True, verbose_name='作業後状態')),
                ('action_authority', models.IntegerField(blank=True, null=True, verbose_name='作業権限')),
                ('action_class', models.CharField(blank=True, max_length=20, null=True, verbose_name='作業属性')),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalDocuments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算ID')),
                ('work_id', models.IntegerField(blank=True, null=True, verbose_name='工事ID')),
                ('file_no', models.IntegerField(blank=True, null=True, verbose_name='ファイルNo')),
                ('file_name', models.TextField(blank=True, max_length=100, null=True, verbose_name='ファイル名')),
                ('file', models.BinaryField(blank=True, null=True, verbose_name='ファイルデータ')),
                ('entry_time', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_user', models.TextField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='削除フラグ')),
            ],
        ),
        migrations.CreateModel(
            name='AirPollutionEquipNtfcCategoryMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='AirPollutionEquipNtfcMotiveMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='設置/変更')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='AirPollutionRepealEquipNtfcCategoryMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='AirPollutionVocNtfcActionMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(blank=True, max_length=20, null=True, verbose_name='扱い')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='AmountUnitMaster',
            fields=[
                ('unit_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='単位id')),
                ('unit', models.CharField(blank=True, max_length=20, null=True, verbose_name='単位')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationClassMaster',
            fields=[
                ('application_class_cd', models.IntegerField(primary_key=True, serialize=False, verbose_name='申請区分CD')),
                ('application_class_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='申請区分名')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='AttachmentDocuments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folder', models.CharField(blank=True, max_length=100, null=True, verbose_name='保存先')),
                ('data', models.CharField(blank=True, max_length=100, null=True, verbose_name='データ')),
                ('file_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='ファイル名')),
                ('entry_time', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_user', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='削除フラグ')),
                ('div_id_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='タブ名')),
            ],
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算id')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('budget_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='予算NO')),
                ('request_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='依頼名')),
                ('budget_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='予算名')),
                ('relation_budget_id', models.IntegerField(blank=True, null=True, verbose_name='関連予算id')),
                ('decision_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='決裁番号')),
                ('carry_over_flag', models.IntegerField(blank=True, null=True, verbose_name='見送りフラグ')),
                ('application_price', models.BigIntegerField(blank=True, null=True, verbose_name='申請金額')),
                ('budget_price', models.BigIntegerField(blank=True, null=True, verbose_name='予算金額')),
                ('jurisdiction_area', models.CharField(blank=True, max_length=20, null=True, verbose_name='所管エリア')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='着工日')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='完工日')),
                ('order_date', models.DateField(blank=True, null=True, verbose_name='発注日')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='納期日')),
                ('pre_order_flag', models.CharField(blank=True, max_length=10, null=True, verbose_name='事前発注')),
                ('asdm_flag', models.CharField(blank=True, max_length=20, null=True, verbose_name='定修区分')),
                ('management_class_cd', models.CharField(blank=True, max_length=2, null=True, verbose_name='管理区分CD')),
                ('purpose', models.TextField(blank=True, max_length=400, null=True, verbose_name='目的')),
                ('request_detail', models.TextField(blank=True, max_length=400, null=True, verbose_name='依頼内容')),
                ('detail', models.TextField(blank=True, max_length=400, null=True, verbose_name='内容')),
                ('effect', models.TextField(blank=True, max_length=400, null=True, verbose_name='効果')),
                ('influence_for_operation', models.TextField(blank=True, max_length=400, null=True, verbose_name='操業影響')),
                ('influence_for_quality', models.TextField(blank=True, max_length=400, null=True, verbose_name='品質影響')),
                ('remove_assets', models.TextField(blank=True, max_length=400, null=True, verbose_name='除却資産')),
                ('budget_rem', models.TextField(blank=True, max_length=400, null=True, verbose_name='備考')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('cancel_flag', models.IntegerField(blank=True, null=True, verbose_name='中止FL')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
                ('decision_rank_detail', models.CharField(blank=True, max_length=20, null=True, verbose_name='判定ランク詳細')),
                ('no_make_cs_flag', models.IntegerField(blank=True, default=0, null=True, verbose_name='届出CS作成不要FL')),
                ('check_material_flag', models.CharField(blank=True, max_length=10, null=True, verbose_name='物質情報入力該当FL')),
                ('last_plan_id', models.IntegerField(blank=True, null=True, verbose_name='前計画区分予算ID')),
                ('mplan_desired_amount', models.BigIntegerField(blank=True, null=True, verbose_name='中計申請希望額')),
                ('mplan_adjustment_amount', models.BigIntegerField(blank=True, null=True, verbose_name='中計申請後調整額')),
                ('mplan_basis_comment', models.CharField(blank=True, max_length=200, null=True, verbose_name='中計申請額根拠コメント')),
                ('mplan_concerns', models.TextField(blank=True, max_length=400, null=True, verbose_name='中計懸念事項')),
                ('application_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.ApplicationClassMaster', verbose_name='申請区分')),
            ],
        ),
        migrations.CreateModel(
            name='BudgetCarryForward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carry_forward_id', models.IntegerField(blank=True, null=True, verbose_name='繰越情報id')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算id')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('carry_forward_price', models.BigIntegerField(blank=True, null=True, verbose_name='繰越金額')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='完了予定工期')),
                ('order_complete_flag', models.IntegerField(blank=True, null=True, verbose_name='発注完了状態')),
                ('carry_forward_reason', models.TextField(blank=True, max_length=400, null=True, verbose_name='予算繰越理由')),
                ('settlement_no', models.CharField(blank=True, max_length=40, null=True, verbose_name='繰越決済No')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='BudgetClassMaster',
            fields=[
                ('budget_class_cd', models.IntegerField(primary_key=True, serialize=False, verbose_name='工事区分CD')),
                ('budget_class_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='工事区分名')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='BudgetCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算id')),
            ],
        ),
        migrations.CreateModel(
            name='BudgetConditionMaster',
            fields=[
                ('condition_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='状態id')),
                ('condition_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='状態名')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='BudgetConditionRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('budget_condition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.BudgetConditionMaster', verbose_name='予算状態')),
            ],
        ),
        migrations.CreateModel(
            name='BudgetEquipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算id')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('equip_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='機器NO')),
                ('equip_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='機器名')),
                ('management_class', models.CharField(blank=True, max_length=50, null=True, verbose_name='区分')),
                ('facility', models.CharField(blank=True, max_length=50, null=True, verbose_name='設備工程')),
                ('equip_family', models.CharField(blank=True, max_length=50, null=True, verbose_name='機器ファミリー')),
                ('equip_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='機器タイプ')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='BudgetLaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算id')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('law_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='法令')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='BudgetMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(verbose_name='予算id')),
                ('work_id', models.IntegerField(blank=True, null=True, verbose_name='工事id')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('material_cd', models.CharField(blank=True, max_length=20, null=True, verbose_name='物質記号')),
                ('material_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='物質名')),
                ('chemical_formula', models.CharField(blank=True, max_length=20, null=True, verbose_name='化学式')),
                ('sub_no', models.IntegerField(blank=True, null=True, verbose_name='サブNo')),
                ('normal_pressure', models.FloatField(blank=True, null=True, verbose_name='通常圧力')),
                ('str_normal_pressure', models.CharField(blank=True, max_length=30, null=True, verbose_name='通常圧力')),
                ('maximum_pressure', models.FloatField(blank=True, null=True, verbose_name='最高圧力')),
                ('minimum_pressure', models.FloatField(blank=True, null=True, verbose_name='最低圧力')),
                ('normal_temperature', models.FloatField(blank=True, null=True, verbose_name='通常温度')),
                ('str_normal_temperature', models.CharField(blank=True, max_length=30, null=True, verbose_name='通常温度')),
                ('maximum_temperature', models.FloatField(blank=True, null=True, verbose_name='最高温度')),
                ('minimum_temperature', models.FloatField(blank=True, null=True, verbose_name='最低温度')),
                ('concentration', models.FloatField(blank=True, null=True, verbose_name='濃度')),
                ('ph', models.FloatField(blank=True, null=True, verbose_name='pH')),
                ('str_ph', models.CharField(blank=True, max_length=30, null=True, verbose_name='pH')),
                ('viscosity', models.FloatField(blank=True, null=True, verbose_name='粘度')),
                ('angle_of_repose', models.CharField(blank=True, max_length=30, null=True, verbose_name='安息角')),
                ('bulk_specific_gravity', models.FloatField(blank=True, null=True, verbose_name='嵩密度')),
                ('str_bulk_specific_gravity', models.CharField(blank=True, max_length=30, null=True, verbose_name='嵩密度')),
                ('true_specific_gravity', models.FloatField(blank=True, null=True, verbose_name='真比重')),
                ('str_true_specific_gravity', models.CharField(blank=True, max_length=30, null=True, verbose_name='真比重')),
                ('apparent_specific_gravity', models.FloatField(blank=True, null=True, verbose_name='見掛比重')),
                ('str_apparent_specific_gravity', models.CharField(blank=True, max_length=30, null=True, verbose_name='見掛比重')),
                ('particle_size', models.FloatField(blank=True, null=True, verbose_name='粒径')),
                ('str_particle_size', models.CharField(blank=True, max_length=30, null=True, verbose_name='粒径')),
                ('moisture', models.FloatField(blank=True, null=True, verbose_name='水分')),
                ('str_moisture', models.CharField(blank=True, max_length=30, null=True, verbose_name='水分')),
                ('others', models.TextField(blank=True, max_length=1000, null=True, verbose_name='その他')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='BudgetRegulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算id')),
            ],
        ),
        migrations.CreateModel(
            name='BudgetRelationDepartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算id')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='BudgetRequiredFunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(verbose_name='予算id')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('sub_no', models.IntegerField(blank=True, null=True, verbose_name='サブNo')),
                ('material', models.CharField(blank=True, max_length=40, null=True, verbose_name='取扱物質')),
                ('required_material_capacity', models.FloatField(blank=True, null=True, verbose_name='要求量')),
                ('required_cooling_temperature', models.FloatField(blank=True, null=True, verbose_name='要求冷却温度')),
                ('required_heating_temperature', models.FloatField(blank=True, null=True, verbose_name='要求加熱温度')),
                ('temperature', models.FloatField(blank=True, null=True, verbose_name='温度')),
                ('required_compress_pressure', models.FloatField(blank=True, null=True, verbose_name='要求圧縮圧')),
                ('required_vacuum_pressure', models.FloatField(blank=True, null=True, verbose_name='要求減圧')),
                ('pressure', models.FloatField(blank=True, null=True, verbose_name='圧力')),
                ('required_moisture', models.FloatField(blank=True, null=True, verbose_name='要求水分')),
                ('required_concentration', models.FloatField(blank=True, null=True, verbose_name='要求濃度')),
                ('required_particle_size', models.FloatField(blank=True, null=True, verbose_name='要求粒径')),
                ('required_transfer_length', models.FloatField(blank=True, null=True, verbose_name='要求輸送距離')),
                ('required_others', models.TextField(blank=True, max_length=400, null=True, verbose_name='その他要求')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='BudgetRisks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_year', models.IntegerField(blank=True, null=True, verbose_name='年度')),
                ('risks', models.CharField(blank=True, max_length=2400, null=True, verbose_name='リスク評価結果')),
                ('note', models.CharField(blank=True, max_length=400, null=True, verbose_name='備考')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='BuildingStandardsActCategoryMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessYearMaster',
            fields=[
                ('business_year', models.IntegerField(primary_key=True, serialize=False, verbose_name='年度')),
                ('display_flag', models.IntegerField(blank=True, null=True, verbose_name='表示FL')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='CheckItemMaster',
            fields=[
                ('check_cd', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='チェック項目CD')),
                ('function_cd', models.CharField(blank=True, max_length=40, null=True, verbose_name='機能コード')),
                ('check_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='名称')),
                ('text_input_flag', models.BooleanField(blank=True, null=True, verbose_name='テキスト入力FL')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='CheckList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function_cd', models.CharField(blank=True, max_length=40, null=True, verbose_name='機能コード')),
                ('target', models.CharField(blank=True, max_length=20, null=True, verbose_name='対象')),
                ('target_id', models.IntegerField(blank=True, null=True, verbose_name='対象id')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='削除フラグ')),
            ],
        ),
        migrations.CreateModel(
            name='CheckListDepartmentRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, max_length=1000, null=True, verbose_name='所管部署コメント')),
                ('check_list', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fms.CheckList', verbose_name='チェックリスト')),
            ],
        ),
        migrations.CreateModel(
            name='CheckListItemRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_status', models.IntegerField(blank=True, null=True, verbose_name='チェック状態')),
                ('input_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='入力テキスト')),
                ('check_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fms.CheckItemMaster', verbose_name='チェック項目')),
                ('check_list', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fms.CheckList', verbose_name='チェックリスト')),
            ],
        ),
        migrations.CreateModel(
            name='ConcentrationUnitMaster',
            fields=[
                ('unit_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='単位id')),
                ('unit', models.CharField(blank=True, max_length=20, null=True, verbose_name='単位')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='ConstructionPolicyOverview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算id')),
                ('budget_rev_no', models.IntegerField(blank=True, null=True, verbose_name='予算RevNo')),
                ('required_spec_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='要求仕様No')),
                ('no', models.IntegerField(blank=True, null=True, verbose_name='No')),
                ('policy', models.TextField(blank=True, max_length=2000, null=True, verbose_name='工事方針')),
                ('overview', models.TextField(blank=True, max_length=2000, null=True, verbose_name='工事概要')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='ConstructionRecyclingCategoryMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='CsEngineering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cs_no', models.IntegerField(blank=True, null=True, verbose_name='届出CS管理NO')),
                ('cs_rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
                ('building_standards_act', models.BooleanField(blank=True, null=True, verbose_name='建築基準法_確認申請')),
                ('building_standards_act_category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('energy_rationalization_act', models.BooleanField(blank=True, null=True, verbose_name='省エネ法_特定建築物届出')),
                ('energy_rationalization_act_category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('energy_rationalization_act_action', models.CharField(blank=True, max_length=20, null=True, verbose_name='扱い')),
                ('construction_recycling', models.BooleanField(blank=True, null=True, verbose_name='建設リサイクル法')),
                ('construction_recycling_category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
                ('note', models.TextField(blank=True, max_length=400, null=True, verbose_name='備考')),
            ],
        ),
        migrations.CreateModel(
            name='CsEnvironment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cs_no', models.IntegerField(blank=True, null=True, verbose_name='届出CS管理NO')),
                ('cs_rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
                ('air_pollution_equip_ntfc', models.BooleanField(blank=True, null=True, verbose_name='大気汚染防止法_大気汚染物質発生施設届')),
                ('air_pollution_equip_ntfc_category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('air_pollution_equip_ntfc_motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='設置/変更')),
                ('air_pollution_repeal_equip_ntfc', models.BooleanField(blank=True, null=True, verbose_name='大気汚染防止法_大気汚染物質発生施設廃止届')),
                ('air_pollution_repeal_equip_ntfc_category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('air_pollution_voc_ntfc', models.BooleanField(blank=True, null=True, verbose_name='大気汚染防止法_揮発性有機化合物発生施設届')),
                ('air_pollution_voc_ntfc_action', models.CharField(blank=True, max_length=20, null=True, verbose_name='扱い')),
                ('air_pollution_particulates_ntfc', models.BooleanField(blank=True, null=True, verbose_name='大気汚染防止法_特定粉じん排出等作業実施届出')),
                ('water_pollution_ntfc', models.BooleanField(blank=True, null=True, verbose_name='水質汚濁防止法_特定施設届')),
                ('water_pollution_ntfc_action', models.CharField(blank=True, max_length=20, null=True, verbose_name='扱い')),
                ('soil_contamination_ntfc', models.BooleanField(blank=True, null=True, verbose_name='土壌汚染対策法_土地形質変更届')),
                ('waste_equip_app', models.BooleanField(blank=True, null=True, verbose_name='廃棄物処理法_産業廃棄物処理施設申請')),
                ('waste_equip_app_motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='設置/変更')),
                ('waste_repeal_equip_ntfc', models.BooleanField(blank=True, null=True, verbose_name='廃棄物処理法_産業廃棄物処理施設廃止届')),
                ('management_freon_plan', models.BooleanField(blank=True, null=True, verbose_name='フロン排出抑制法_工程管理票')),
                ('living_env_equip_ntfc', models.BooleanField(blank=True, null=True, verbose_name='県生活環境保全条例_指定施設届')),
                ('living_env_equip_ntfc_category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('living_env_equip_ntfc_action', models.CharField(blank=True, max_length=20, null=True, verbose_name='扱い')),
                ('living_env_nox_emission_plan_ntfc', models.BooleanField(blank=True, null=True, verbose_name='県生活環境保全条例_窒素酸化物排出計画届')),
                ('living_env_soil_survey', models.BooleanField(blank=True, null=True, verbose_name='県生活環境保全条例_土壌調査')),
                ('living_env_water_pumping_app', models.BooleanField(blank=True, null=True, verbose_name='県生活環境保全条例_揚水設備届出/申請')),
                ('pollution_agree_consultation', models.BooleanField(blank=True, null=True, verbose_name='市公害防止協定_公害防止協定事前協議')),
                ('titanium_compatible_report', models.BooleanField(blank=True, null=True, verbose_name='チタン鉱石問題対応方針_報告書')),
                ('water_purification_tanks_ntfc', models.BooleanField(blank=True, null=True, verbose_name='浄化槽法_浄化槽届出')),
                ('water_purification_tanks_ntfc_amendment', models.CharField(blank=True, max_length=20, null=True, verbose_name='改廃')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
                ('note', models.TextField(blank=True, max_length=400, null=True, verbose_name='備考')),
            ],
        ),
        migrations.CreateModel(
            name='CsGeneralAffairs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cs_no', models.IntegerField(blank=True, null=True, verbose_name='届出CS管理NO')),
                ('cs_rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
                ('factory_location_act', models.BooleanField(blank=True, null=True, verbose_name='工場立地法')),
                ('motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='設置/変更')),
                ('port_harbour_act', models.BooleanField(blank=True, null=True, verbose_name='港湾法')),
                ('port_regulations', models.BooleanField(blank=True, null=True, verbose_name='港則法')),
                ('buildings_regulations', models.BooleanField(blank=True, null=True, verbose_name='市中高層建築物等条例')),
                ('cityscape_regulations', models.BooleanField(blank=True, null=True, verbose_name='市都市景観条例')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
                ('note', models.TextField(blank=True, max_length=400, null=True, verbose_name='備考')),
            ],
        ),
        migrations.CreateModel(
            name='CsManage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算ID')),
                ('work_id', models.IntegerField(blank=True, null=True, verbose_name='工事ID')),
                ('cs_no', models.IntegerField(blank=True, null=True, verbose_name='届出CS管理NO')),
                ('cs_rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('related_cs_no', models.IntegerField(blank=True, null=True, verbose_name='関連届出CS管理NO')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
                ('comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='コメント')),
                ('budget_charge_id', models.IntegerField(blank=True, null=True, verbose_name='担当者ID')),
                ('budget_charge_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='担当者コメント')),
                ('remand_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='差戻コメント')),
                ('confirmer_id', models.IntegerField(blank=True, null=True, verbose_name='確認者ID')),
                ('confirmer_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='確認者コメント')),
                ('confirmer_remand_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='確認者差戻コメント')),
                ('authorizer_id', models.IntegerField(blank=True, null=True, verbose_name='承認者ID')),
                ('authorizer_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='原課コメント')),
                ('authorizer_remand_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='承認者差戻コメント')),
                ('wod_charge_id', models.IntegerField(blank=True, null=True, verbose_name='原課ID')),
                ('wod_charge_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='原課コメント')),
                ('env_g_confirmer_id_1', models.IntegerField(blank=True, null=True, verbose_name='確認者ID1')),
                ('env_g_confirmer_comment_1', models.TextField(blank=True, max_length=400, null=True, verbose_name='確認者コメント1')),
                ('env_g_confirmer_id_2', models.IntegerField(blank=True, null=True, verbose_name='確認者ID2')),
                ('env_g_confirmer_comment_2', models.TextField(blank=True, max_length=400, null=True, verbose_name='確認者コメント2')),
                ('env_g_authorizer_id', models.IntegerField(blank=True, null=True, verbose_name='承認者ID')),
                ('env_g_authorizer_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='承認者コメント')),
                ('hse_director_id', models.IntegerField(blank=True, null=True, verbose_name='環境安全衛生部長ID')),
                ('hse_director_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='環境安全衛生部長コメント')),
                ('hse_director_remand_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='環境安全衛生部長差戻コメント')),
                ('ed_director_id', models.IntegerField(blank=True, null=True, verbose_name='環境部長ID')),
                ('ed_director_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='環境部長コメント')),
                ('hs_director_id', models.IntegerField(blank=True, null=True, verbose_name='安全衛生部長ID')),
                ('hs_director_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='安全衛生部長コメント')),
                ('wod_director_id', models.IntegerField(blank=True, null=True, verbose_name='原課部長ID')),
                ('wod_director_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='原課部長コメント')),
                ('gad_director_id', models.IntegerField(blank=True, null=True, verbose_name='総務部長ID')),
                ('gad_director_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='総務部長コメント')),
                ('cd_director_id', models.IntegerField(blank=True, null=True, verbose_name='工務部長ID')),
                ('cd_director_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='工務部長コメント')),
                ('env_department_id', models.IntegerField(blank=True, null=True, verbose_name='環境部ID')),
                ('env_department_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='環境部コメント')),
                ('hs_department_id', models.IntegerField(blank=True, null=True, verbose_name='安全衛生部ID')),
                ('hs_department_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='安全衛生部コメント')),
                ('wo_department_id', models.IntegerField(blank=True, null=True, verbose_name='原課部ID')),
                ('wo_department_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='原課部コメント')),
                ('ga_department_id', models.IntegerField(blank=True, null=True, verbose_name='総務部ID')),
                ('ga_department_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='総務部コメント')),
                ('constr_department_id', models.IntegerField(blank=True, null=True, verbose_name='工務部ID')),
                ('constr_department_comment', models.TextField(blank=True, max_length=400, null=True, verbose_name='工務部コメント')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='CsNotificationProgress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cs_no', models.IntegerField(blank=True, null=True, verbose_name='CS_NO')),
                ('sub_no', models.IntegerField(blank=True, null=True, verbose_name='届出ID')),
                ('laws_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='法令名')),
                ('law_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='コード')),
                ('laws_detail_name', models.CharField(blank=True, max_length=60, null=True, verbose_name='法令詳細分類名称')),
                ('department_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='所管部署')),
                ('limit_date', models.CharField(blank=True, max_length=20, null=True, verbose_name='提出期限')),
                ('witness_inspection', models.IntegerField(blank=True, null=True, verbose_name='立会検査')),
                ('submission_date', models.DateField(blank=True, null=True, verbose_name='提出日')),
                ('notification_date', models.DateField(blank=True, null=True, verbose_name='届出日')),
                ('permit_date', models.DateField(blank=True, null=True, verbose_name='許可日')),
                ('permit_no', models.CharField(blank=True, max_length=100, null=True, verbose_name='許可番号')),
            ],
        ),
        migrations.CreateModel(
            name='CsSafetyHealth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cs_no', models.IntegerField(blank=True, null=True, verbose_name='届出CS管理NO')),
                ('cs_rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
                ('fire_service_app', models.BooleanField(blank=True, null=True, verbose_name='消防法_危険物承認申請')),
                ('fire_service_app_place', models.CharField(blank=True, max_length=20, null=True, verbose_name='場所')),
                ('fire_service_app_action', models.CharField(blank=True, max_length=20, null=True, verbose_name='扱い')),
                ('fire_service_ntfc', models.BooleanField(blank=True, null=True, verbose_name='消防法_危険物届')),
                ('fire_service_ntfc_place', models.CharField(blank=True, max_length=20, null=True, verbose_name='場所')),
                ('fire_service_ntfc_amendment', models.CharField(blank=True, max_length=20, null=True, verbose_name='改廃')),
                ('fire_service_quantity_ntfc', models.BooleanField(blank=True, null=True, verbose_name='消防法_危険物品名数量倍数変更届')),
                ('fire_service_quantity_ntfc_place', models.CharField(blank=True, max_length=20, null=True, verbose_name='場所')),
                ('fire_service_acetylene_gas_ntfc', models.BooleanField(blank=True, null=True, verbose_name='消防法_圧縮アセチレンガス等貯蔵取扱届出')),
                ('fire_service_acetylene_gas_ntfc_amendment', models.CharField(blank=True, max_length=20, null=True, verbose_name='改廃')),
                ('fire_service_tentative_app', models.BooleanField(blank=True, null=True, verbose_name='消防法_危険物仮承認申請')),
                ('fire_service_tentative_app_action', models.CharField(blank=True, max_length=20, null=True, verbose_name='扱い')),
                ('fire_prevent_storage_ntfc', models.BooleanField(blank=True, null=True, verbose_name='市火災予防条例_危険物貯蔵取扱届')),
                ('fire_prevent_storage_ntfc_category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('fire_prevent_storage_ntfc_amendment', models.CharField(blank=True, max_length=20, null=True, verbose_name='改廃')),
                ('fire_prevent_equip_ntfc', models.BooleanField(blank=True, null=True, verbose_name='市火災予防条例_設備設置届')),
                ('fire_prevent_equip_ntfc_category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('fire_prevent_commencement_ntfc', models.BooleanField(blank=True, null=True, verbose_name='市火災予防条例_防火対象物使用開始届')),
                ('fire_prevent_construction_plan', models.BooleanField(blank=True, null=True, verbose_name='市火災予防条例_消防用設備等\u3000工事計画書')),
                ('fire_prevent_installation_ntfc', models.BooleanField(blank=True, null=True, verbose_name='市火災予防条例_消防用設備等\u3000設置届')),
                ('fire_prevent_hazardous_work_ntfc', models.BooleanField(blank=True, null=True, verbose_name='市火災予防条例_危険作業\u3000開始届')),
                ('fire_prevent_fires_smoke_ntfc', models.BooleanField(blank=True, null=True, verbose_name='市火災予防条例_発煙・発火行為届出書')),
                ('deleterious_substances_list_app', models.BooleanField(blank=True, null=True, verbose_name='劇毒物取締法_劇毒物製造業品目登録 申請')),
                ('deleterious_substances_ntfc', models.BooleanField(blank=True, null=True, verbose_name='劇毒物取締法_劇毒物変更届')),
                ('deleterious_substances_ntfc_purpose', models.CharField(blank=True, max_length=20, null=True, verbose_name='取扱')),
                ('press_gas_app', models.BooleanField(blank=True, null=True, verbose_name='高圧ガス保安法_特定高圧ガス設備申請')),
                ('press_gas_app_motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='設置/変更')),
                ('press_gas_lpg_app', models.BooleanField(blank=True, null=True, verbose_name='高圧ガス保安法_液化石油高圧ガス設備申請')),
                ('press_gas_lpg_app_motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='設置/変更')),
                ('press_gas_frozen_gas_app', models.BooleanField(blank=True, null=True, verbose_name='高圧ガス保安法_冷凍高圧ガス設備申請')),
                ('press_gas_frozen_gas_app_motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='設置/変更')),
                ('press_gas_ntfc', models.BooleanField(blank=True, null=True, verbose_name='高圧ガス保安法_特定高圧ガス設備届')),
                ('press_gas_ntfc_amendment', models.CharField(blank=True, max_length=20, null=True, verbose_name='改廃')),
                ('press_gas_lpg_ntfc', models.BooleanField(blank=True, null=True, verbose_name='高圧ガス保安法_液化石油高圧ガス設備届')),
                ('press_gas_lpg_ntfc_amendment', models.CharField(blank=True, max_length=20, null=True, verbose_name='改廃')),
                ('press_gas_frozen_gas_ntfc', models.BooleanField(blank=True, null=True, verbose_name='高圧ガス保安法_冷凍高圧ガス設備届')),
                ('press_gas_frozen_gas_ntfc_amendment', models.CharField(blank=True, max_length=20, null=True, verbose_name='改廃')),
                ('press_gas_consumption_ntfc', models.BooleanField(blank=True, null=True, verbose_name='高圧ガス保安法_特定高圧ガス消費設備届')),
                ('press_gas_consumption_ntfc_amendment', models.CharField(blank=True, max_length=20, null=True, verbose_name='改廃')),
                ('safety_health_equip_ntfc', models.BooleanField(blank=True, null=True, verbose_name='労働安全衛生法_設置物届')),
                ('safety_health_equip_ntfc_category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('safety_health_equip_ntfc_motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='設置/変更')),
                ('safety_health_deleterious_ntfc', models.BooleanField(blank=True, null=True, verbose_name='労働安全衛生法_有害物質届')),
                ('safety_health_deleterious_ntfc_category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('safety_health_deleterious_ntfc_motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='設置/変更')),
                ('safety_health_asbestos', models.BooleanField(blank=True, null=True, verbose_name='労働安全衛生法_石綿障害予防規則')),
                ('safety_health_specified_equip_ntfc', models.BooleanField(blank=True, null=True, verbose_name='労働安全衛生法_設備届')),
                ('safety_health_specified_equip_ntfc_category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('safety_health_specified_equip_ntfc_motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='設置/変更')),
                ('safety_health_installation_report', models.BooleanField(blank=True, null=True, verbose_name='労働安全衛生法_設備設置報告')),
                ('safety_health_installation_report_category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('safety_health_installation_report_motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='設置/変更')),
                ('radiation_hazards_app', models.BooleanField(blank=True, null=True, verbose_name='放射線障害防止法_放射性同位元素申請')),
                ('radiation_hazards_app_motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='使用/変更')),
                ('petroleum_complexes_act', models.BooleanField(blank=True, null=True, verbose_name='石災法')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
                ('note', models.TextField(blank=True, max_length=400, null=True, verbose_name='備考')),
            ],
        ),
        migrations.CreateModel(
            name='DailyConstruction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_construction_id', models.IntegerField(blank=True, null=True, verbose_name='計画工事id')),
                ('small_construction_id', models.IntegerField(blank=True, null=True, verbose_name='小口工事id')),
                ('construction_class', models.IntegerField(blank=True, null=True, verbose_name='工事区分')),
                ('construction_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='工事名')),
                ('fires_flag', models.BooleanField(blank=True, null=True, verbose_name='火気使用FL')),
                ('drilling_flag', models.BooleanField(blank=True, null=True, verbose_name='掘削FL')),
                ('blockage_flag', models.BooleanField(blank=True, null=True, verbose_name='交通遮断FL')),
                ('notification_flag', models.BooleanField(blank=True, null=True, verbose_name='届出FL')),
                ('high_place_flag', models.BooleanField(blank=True, null=True, verbose_name='高所作業FL')),
                ('entering_the_tank_flag', models.BooleanField(blank=True, null=True, verbose_name='入槽作業FL')),
                ('heavy_equipment_flag', models.BooleanField(blank=True, null=True, verbose_name='重機使用FL')),
                ('brake_off_flag', models.BooleanField(blank=True, null=True, verbose_name='縁切FL')),
                ('contamination_flag', models.BooleanField(blank=True, null=True, verbose_name='異物FL')),
                ('construction_date', models.DateField(blank=True, null=True, verbose_name='工事日')),
                ('charge_person', models.CharField(blank=True, max_length=30, null=True, verbose_name='担当者')),
                ('constructor', models.CharField(blank=True, max_length=30, null=True, verbose_name='業者')),
                ('detail', models.CharField(blank=True, max_length=300, null=True, verbose_name='作業詳細')),
                ('rem', models.CharField(blank=True, max_length=300, null=True, verbose_name='備考')),
                ('position_x', models.IntegerField(blank=True, null=True, verbose_name='x座標')),
                ('position_y', models.IntegerField(blank=True, null=True, verbose_name='y座標')),
                ('blockage_position_x', models.IntegerField(blank=True, null=True, verbose_name='交通遮断x座標')),
                ('blockage_position_y', models.IntegerField(blank=True, null=True, verbose_name='交通遮断y座標')),
                ('display_number', models.IntegerField(blank=True, null=True, verbose_name='表示NO')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='DataEntryStepMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_id', models.IntegerField(blank=True, null=True, verbose_name='工程id')),
                ('target_table', models.CharField(blank=True, max_length=50, null=True, verbose_name='対象テーブル')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='DeleteriousSubstancesNtfcPurposeMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(blank=True, max_length=20, null=True, verbose_name='取扱')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentMaster',
            fields=[
                ('department_cd', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='部署CD')),
                ('department_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='部署名')),
                ('division_cd', models.CharField(blank=True, max_length=10, null=True, verbose_name='部門CD')),
                ('jurisdiction_area', models.CharField(blank=True, max_length=20, null=True, verbose_name='所管エリア')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimate_id', models.IntegerField(blank=True, null=True, verbose_name='見積id')),
                ('discount_no', models.IntegerField(blank=True, null=True, verbose_name='値引回数')),
                ('discount_price', models.IntegerField(blank=True, null=True, verbose_name='値引額')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
                ('vendor_person', models.CharField(blank=True, max_length=20, null=True, verbose_name='業者担当者')),
                ('rem', models.TextField(blank=True, max_length=500, null=True, verbose_name='備考')),
            ],
        ),
        migrations.CreateModel(
            name='DisplayItemForHeatExchange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_exchange_area_flag', models.IntegerField(blank=True, null=True, verbose_name='伝熱面積表示FL')),
                ('display_hot_fluid_flag', models.IntegerField(blank=True, null=True, verbose_name='高温物質FL')),
                ('display_hot_design_temperature_flag', models.IntegerField(blank=True, null=True, verbose_name='高温側設計温度表示FL')),
                ('display_hot_regular_use_temperature_flag', models.IntegerField(blank=True, null=True, verbose_name='高温側常用温度表示FL')),
                ('display_hot_input_temperature_flag', models.IntegerField(blank=True, null=True, verbose_name='高温側入口温度表示FL')),
                ('display_hot_output_temperature_flag', models.IntegerField(blank=True, null=True, verbose_name='高温側出口温度表示FL')),
                ('display_hot_fluid_capacity_flag', models.IntegerField(blank=True, null=True, verbose_name='高温物質流量表示FL')),
                ('display_hot_fluid_capacity_unit_flag', models.IntegerField(blank=True, null=True, verbose_name='高温物質流量単位表示FL')),
                ('display_hot_design_pressure_flag', models.IntegerField(blank=True, null=True, verbose_name='高温側設計圧力表示FL')),
                ('display_hot_regular_use_pressure_flag', models.IntegerField(blank=True, null=True, verbose_name='高温側常用圧力表示FL')),
                ('display_hot_pressure_unit_flag', models.IntegerField(blank=True, null=True, verbose_name='高温側圧力単位表示FL')),
                ('display_cool_fluid_flag', models.IntegerField(blank=True, null=True, verbose_name='低温物質FL')),
                ('display_cool_design_temperature_flag', models.IntegerField(blank=True, null=True, verbose_name='低温側設計温度表示FL')),
                ('display_cool_regular_use_temperature_flag', models.IntegerField(blank=True, null=True, verbose_name='低温側常用温度表示FL')),
                ('display_cool_input_temperature_flag', models.IntegerField(blank=True, null=True, verbose_name='低温側入口温度表示FL')),
                ('display_cool_output_temperature_flag', models.IntegerField(blank=True, null=True, verbose_name='低温側出口温度表示FL')),
                ('display_cool_fluid_capacity_flag', models.IntegerField(blank=True, null=True, verbose_name='低温物質流量表示FL')),
                ('display_cool_fluid_capacity_unit_flag', models.IntegerField(blank=True, null=True, verbose_name='低温物質流量単位表示FL')),
                ('display_cool_design_pressure_flag', models.IntegerField(blank=True, null=True, verbose_name='低温側設計圧力表示FL')),
                ('display_cool_regular_use_pressure_flag', models.IntegerField(blank=True, null=True, verbose_name='低温側常用圧力表示FL')),
                ('display_cool_pressure_unit_flag', models.IntegerField(blank=True, null=True, verbose_name='低温側圧力単位表示FL')),
                ('display_rem_flag', models.IntegerField(blank=True, null=True, verbose_name='備考表示FL')),
            ],
        ),
        migrations.CreateModel(
            name='DisplayRequiredItemForFunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_material_flag', models.IntegerField(blank=True, null=True, verbose_name='取扱物質表示FL')),
                ('display_required_material_capacity_flag', models.IntegerField(blank=True, null=True, verbose_name='要求量表示FL')),
                ('display_material_capacity_unit_flag', models.IntegerField(blank=True, null=True, verbose_name='量単位表示FL')),
                ('display_required_cooling_temperature_flag', models.IntegerField(blank=True, null=True, verbose_name='要求冷却温度表示FL')),
                ('display_required_heating_temperature_flag', models.IntegerField(blank=True, null=True, verbose_name='要求加熱温度表示FL')),
                ('display_temperature_flag', models.IntegerField(blank=True, null=True, verbose_name='温度表示FL')),
                ('display_required_compress_pressure_flag', models.IntegerField(blank=True, null=True, verbose_name='要求圧縮圧表示FL')),
                ('display_required_vacuum_pressure_flag', models.IntegerField(blank=True, null=True, verbose_name='要求減圧表示FL')),
                ('display_pressure_flag', models.IntegerField(blank=True, null=True, verbose_name='圧力表示FL')),
                ('display_pressure_unit_flag', models.IntegerField(blank=True, null=True, verbose_name='圧力単位表示FL')),
                ('display_required_moisture_flag', models.IntegerField(blank=True, null=True, verbose_name='要求水分表示FL')),
                ('display_required_concentration_flag', models.IntegerField(blank=True, null=True, verbose_name='要求濃度表示FL')),
                ('display_concentration_unit_flag', models.IntegerField(blank=True, null=True, verbose_name='濃度単位表示FL')),
                ('display_required_particle_size_flag', models.IntegerField(blank=True, null=True, verbose_name='要求粒径表示FL')),
                ('display_required_transfer_length_flag', models.IntegerField(blank=True, null=True, verbose_name='要求輸送距離表示FL')),
                ('display_required_others_flag', models.IntegerField(blank=True, null=True, verbose_name='そのた要求表示FL')),
            ],
        ),
        migrations.CreateModel(
            name='DivisionMaster',
            fields=[
                ('division_cd', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='部門CD')),
                ('division_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='部門名')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='EnergyRationalizationActActionMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(blank=True, max_length=20, null=True, verbose_name='扱い')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='EnergyRationalizationActCategoryMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='Eqpt_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mgt_cls', models.CharField(blank=True, max_length=5, null=True, verbose_name='管理区分')),
                ('eqpt_family', models.CharField(blank=True, max_length=5, null=True, verbose_name='機器ファミリー')),
                ('eqpt_tp', models.CharField(blank=True, max_length=20, null=True, verbose_name='機器タイプ')),
                ('eqpt_cat_nm', models.CharField(blank=True, max_length=40, null=True, verbose_name='機器タイプ名')),
                ('eqpt_cat_abbr', models.CharField(blank=True, max_length=40, null=True, verbose_name='機器タイプ??')),
                ('disp_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('rem', models.CharField(blank=True, max_length=200, null=True, verbose_name='備考')),
            ],
        ),
        migrations.CreateModel(
            name='EQPTBASICMST',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MGT_CLS', models.CharField(blank=True, max_length=10, null=True, verbose_name='区分')),
                ('FCLTY_CD', models.CharField(blank=True, max_length=50, null=True, verbose_name='工程名')),
                ('EQPT_ID', models.CharField(blank=True, max_length=50, null=True, verbose_name='機器NO')),
                ('EQPT_NM', models.CharField(blank=True, max_length=50, null=True, verbose_name='機器名')),
                ('EQPT_FMLY', models.CharField(blank=True, max_length=50, null=True, verbose_name='機器ファミリー')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentCategoryMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('management_class', models.CharField(blank=True, max_length=1, null=True, verbose_name='管理区分')),
                ('equipment_category_cd', models.CharField(blank=True, max_length=2, null=True, verbose_name='機器カテゴリCD')),
                ('equipment_category_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='機器カテゴリ名')),
                ('equipment_family', models.CharField(blank=True, max_length=2, null=True, verbose_name='機器ファミリ')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentFamilyMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('management_class', models.CharField(blank=True, max_length=1, null=True, verbose_name='管理区分')),
                ('equipment_family_cd', models.CharField(blank=True, max_length=2, null=True, verbose_name='機器ファミリCD')),
                ('equipment_family_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='機器ファミリ名')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentHistoryReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phenomenon_id2', models.IntegerField(blank=True, null=True, verbose_name='案件NO')),
                ('sub_no', models.IntegerField(blank=True, null=True, verbose_name='サブNO')),
                ('history_no', models.IntegerField(blank=True, null=True, verbose_name='履歴NO')),
                ('m_site_skey', models.IntegerField(blank=True, null=True, verbose_name='skey_拠点')),
                ('m_mgt_cls_skey', models.IntegerField(blank=True, null=True, verbose_name='skey_管理区分')),
                ('m_location_skey', models.IntegerField(blank=True, null=True, verbose_name='skey_工場区分')),
                ('t_fclty_ldgr_skey', models.IntegerField(blank=True, null=True, verbose_name='skey_機器')),
                ('time_of_occurrence', models.DateField(blank=True, null=True, verbose_name='発生日時')),
                ('m_exe_cls_skey', models.IntegerField(blank=True, null=True, verbose_name='skey_実施区分')),
                ('failure_work_type', models.CharField(blank=True, max_length=20, null=True, verbose_name='故障/作業種別')),
                ('serious_breakdown_case', models.IntegerField(blank=True, null=True, verbose_name='重故障案件')),
                ('s_specman_list_value_skey', models.CharField(blank=True, max_length=20, null=True, verbose_name='skey_保全区分')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='完工日')),
                ('cycle_reference_date', models.DateField(blank=True, null=True, verbose_name='周期基準日')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='着工日')),
                ('maintenance_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='保全名称')),
                ('maintenance_personnel', models.IntegerField(blank=True, null=True, verbose_name='保全担当者')),
                ('person_in_charge_of_the_original_section', models.CharField(blank=True, max_length=60, null=True, verbose_name='原課担当者')),
                ('construction_representative', models.CharField(blank=True, max_length=20, null=True, verbose_name='工事担当者')),
                ('s_user_skey', models.IntegerField(blank=True, null=True, verbose_name='skey_工事担当者')),
                ('m_condition_cd_skey', models.IntegerField(blank=True, null=True, verbose_name='skey_状況')),
                ('m_position_cd_skey_condition', models.IntegerField(blank=True, null=True, verbose_name='skey_状況部位コード')),
                ('m_phenomenon_cd_skey', models.IntegerField(blank=True, null=True, verbose_name='skey_現象')),
                ('m_position_cd_skey_phenomenon', models.IntegerField(blank=True, null=True, verbose_name='skey_現象部位コード')),
                ('m_cause_cd_skey', models.IntegerField(blank=True, null=True, verbose_name='skey_原因')),
                ('m_position_cd_skey_cause', models.IntegerField(blank=True, null=True, verbose_name='skey_原因部位コード')),
                ('m_treatment_cd_skey', models.IntegerField(blank=True, null=True, verbose_name='skey_処置')),
                ('m_position_cd_skey_treatment', models.IntegerField(blank=True, null=True, verbose_name='skey_処置部位コード')),
                ('m_result_cd_skey', models.IntegerField(blank=True, null=True, verbose_name='skey_結果')),
                ('stop_time', models.IntegerField(blank=True, null=True, verbose_name='停止時間')),
                ('repair_time', models.IntegerField(blank=True, null=True, verbose_name='修理時間')),
                ('report_detail', models.CharField(blank=True, max_length=400, null=True, verbose_name='報告詳細')),
                ('cause_detail', models.CharField(blank=True, max_length=200, null=True, verbose_name='原因詳細')),
                ('countermeasure', models.CharField(blank=True, max_length=200, null=True, verbose_name='対策')),
                ('phenomenon_details', models.CharField(blank=True, max_length=200, null=True, verbose_name='現象詳細')),
                ('special_note_construction_work', models.CharField(blank=True, max_length=200, null=True, verbose_name='特記（工務）')),
                ('special_note_production', models.CharField(blank=True, max_length=200, null=True, verbose_name='特記（生産）')),
                ('message', models.CharField(blank=True, max_length=200, null=True, verbose_name='申送事項')),
                ('items_to_be_sent_production', models.CharField(blank=True, max_length=200, null=True, verbose_name='申送り事項（生産）')),
                ('attachment', models.CharField(blank=True, max_length=5, null=True, verbose_name='添付ファイル')),
                ('is_need_input_plantia', models.CharField(blank=True, max_length=5, null=True, verbose_name='PLANTIA入力要否')),
                ('export_complete_flag', models.IntegerField(blank=True, null=True, verbose_name='データエクスポート完了FL')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
                ('mgt_class', models.CharField(blank=True, max_length=5, null=True, verbose_name='管理区分')),
                ('facility', models.CharField(blank=True, max_length=10, null=True, verbose_name='工場')),
                ('equipment_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='機器NO')),
                ('phenomenon_class', models.CharField(blank=True, max_length=5, null=True, verbose_name='現象区分')),
                ('cause_class', models.CharField(blank=True, max_length=5, null=True, verbose_name='原因区分')),
                ('result', models.CharField(blank=True, max_length=5, null=True, verbose_name='結果')),
                ('oprtn_time', models.IntegerField(blank=True, null=True, verbose_name='運転時間')),
                ('special_mention', models.CharField(blank=True, max_length=200, null=True, verbose_name='特記')),
            ],
        ),
        migrations.CreateModel(
            name='ErpConstruction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(blank=True, null=True, verbose_name='依頼id')),
                ('detail_no', models.IntegerField(blank=True, null=True, verbose_name='明細番号')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算id')),
                ('order_date', models.CharField(blank=True, max_length=8, null=True, verbose_name='購買発注日')),
                ('vendor_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='仕入先CD')),
                ('purchase_group_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='購買組織CD')),
                ('purchase_person', models.CharField(blank=True, max_length=20, null=True, verbose_name='購買グループ担当者')),
                ('currency_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='通貨CD')),
                ('account_class', models.CharField(blank=True, max_length=5, null=True, verbose_name='勘定設定')),
                ('item_code', models.CharField(blank=True, max_length=16, null=True, verbose_name='品目CD')),
                ('item_text', models.CharField(blank=True, max_length=40, null=True, verbose_name='品目テキスト')),
                ('order_amount', models.IntegerField(blank=True, null=True, verbose_name='購買発注量')),
                ('ordering_unit', models.CharField(blank=True, max_length=9, null=True, verbose_name='発注単位')),
                ('delivery_date', models.CharField(blank=True, max_length=8, null=True, verbose_name='納入期日')),
                ('amount_per_base_unit', models.CharField(blank=True, max_length=8, null=True, verbose_name='購買価格単位（Per）')),
                ('base_unit_amount', models.CharField(blank=True, max_length=8, null=True, verbose_name='購買価格単位')),
                ('purchase_order_no', models.CharField(blank=True, max_length=10, null=True, verbose_name='購買発注NO ')),
                ('erp_errormsg', models.CharField(blank=True, max_length=500, null=True, verbose_name='ERPエラーメッセージ ')),
                ('item_group_code', models.CharField(blank=True, max_length=9, null=True, verbose_name='品目グループCD')),
                ('item_code_status', models.CharField(blank=True, max_length=1, null=True, verbose_name='品目マスタ登録ステータス')),
                ('plant_code', models.CharField(blank=True, max_length=4, null=True, verbose_name='プラントCD')),
                ('storage_space_code', models.CharField(blank=True, max_length=4, null=True, verbose_name='保管場所CD')),
                ('purchase_trace_no', models.CharField(blank=True, max_length=4, null=True, verbose_name='購買依頼追跡番号')),
                ('order_person', models.CharField(blank=True, max_length=25, null=True, verbose_name='依頼者NTユーザ')),
                ('rem', models.CharField(blank=True, max_length=50, null=True, verbose_name='項目注記2')),
                ('storage_space_rem', models.CharField(blank=True, max_length=50, null=True, verbose_name='納入保管場所注記')),
                ('total_price', models.BigIntegerField(blank=True, null=True, verbose_name='総額')),
                ('discount_price', models.BigIntegerField(blank=True, null=True, verbose_name='値引 (金額)')),
                ('account_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='勘定CD')),
                ('cost_center', models.CharField(blank=True, max_length=10, null=True, verbose_name='原価センタ')),
                ('instruction_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='指図書CD')),
                ('consumption_tax_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='消費税コード')),
                ('order_no', models.CharField(blank=True, max_length=10, null=True, verbose_name='購買発注番号')),
                ('work_class', models.CharField(blank=True, max_length=5, null=True, verbose_name='工事区分')),
                ('relation_no', models.CharField(blank=True, max_length=10, null=True, verbose_name='連携システムNO')),
                ('item_detail_text', models.CharField(blank=True, max_length=30, null=True, verbose_name='明細テキスト')),
                ('construction_start_date', models.CharField(blank=True, max_length=8, null=True, verbose_name='着工予定日')),
                ('status', models.IntegerField(blank=True, null=True, verbose_name='ステータス')),
                ('department', models.CharField(blank=True, max_length=20, null=True, verbose_name='部署')),
                ('division', models.CharField(blank=True, max_length=20, null=True, verbose_name='部門')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
                ('specification_person_in_charge', models.CharField(blank=True, max_length=20, null=True, verbose_name='仕様書担当者')),
                ('procurement_person_in_charge', models.CharField(blank=True, max_length=20, null=True, verbose_name='調達担当者')),
                ('request_department', models.CharField(blank=True, max_length=50, null=True, verbose_name='依頼部門')),
            ],
        ),
        migrations.CreateModel(
            name='ErpItemConstruction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_id', models.IntegerField(blank=True, null=True, verbose_name='工事id')),
                ('detail_no', models.IntegerField(blank=True, null=True, verbose_name='明細番号')),
                ('vendor_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='仕入先CD')),
                ('purchase_group_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='購買組織CD')),
                ('purchase_person', models.CharField(blank=True, max_length=20, null=True, verbose_name='購買グループ担当者')),
                ('currency_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='購買グループ担当者')),
                ('account_class', models.CharField(blank=True, max_length=5, null=True, verbose_name='勘定設定')),
                ('item_code', models.CharField(blank=True, max_length=16, null=True, verbose_name='品目CD')),
                ('item_text', models.CharField(blank=True, max_length=30, null=True, verbose_name='品目テキスト')),
                ('order_amount', models.IntegerField(blank=True, null=True, verbose_name='購買発注量')),
                ('ordering_unit', models.CharField(blank=True, max_length=9, null=True, verbose_name='発注単位')),
                ('delivery_date', models.CharField(blank=True, max_length=8, null=True, verbose_name='納入期日')),
                ('amount_per_base_unit', models.CharField(blank=True, max_length=8, null=True, verbose_name='購買価格単位（Per）')),
                ('base_unit_amount', models.CharField(blank=True, max_length=8, null=True, verbose_name='購買価格単位')),
                ('purchase_order_no', models.CharField(blank=True, max_length=10, null=True, verbose_name='購買発注NO ')),
                ('erp_errormsg', models.CharField(blank=True, max_length=500, null=True, verbose_name='ERPエラーメッセージ ')),
                ('item_group_code', models.CharField(blank=True, max_length=9, null=True, verbose_name='品目グループCD')),
                ('plant_code', models.CharField(blank=True, max_length=4, null=True, verbose_name='プラントCD')),
                ('storage_space_code', models.CharField(blank=True, max_length=4, null=True, verbose_name='保管場所CD')),
                ('purchase_trace_no', models.CharField(blank=True, max_length=4, null=True, verbose_name='購買依頼追跡番号')),
                ('order_person', models.CharField(blank=True, max_length=25, null=True, verbose_name='依頼者NTユーザ')),
                ('rem', models.CharField(blank=True, max_length=50, null=True, verbose_name='項目注記2')),
                ('storage_space_rem', models.CharField(blank=True, max_length=50, null=True, verbose_name='納入保管場所注記')),
                ('total_price', models.IntegerField(blank=True, null=True, verbose_name='総額')),
                ('discount_price', models.IntegerField(blank=True, null=True, verbose_name='値引 (金額)')),
                ('account_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='勘定CD')),
                ('cost_center', models.CharField(blank=True, max_length=10, null=True, verbose_name='原価センタ')),
                ('instruction_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='指図書CD')),
                ('consumption_tax_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='消費税コード')),
                ('order_no', models.CharField(blank=True, max_length=10, null=True, verbose_name='購買発注番号')),
                ('relation_no', models.CharField(blank=True, max_length=10, null=True, verbose_name='連携システムNO')),
                ('item_detail_text', models.CharField(blank=True, max_length=30, null=True, verbose_name='明細テキスト')),
                ('construction_start_date', models.CharField(blank=True, max_length=8, null=True, verbose_name='着工予定日')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算id')),
                ('status', models.IntegerField(blank=True, null=True, verbose_name='ステータス')),
            ],
        ),
        migrations.CreateModel(
            name='ErpRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(blank=True, null=True, verbose_name='依頼id')),
                ('work_class', models.CharField(blank=True, max_length=5, null=True, verbose_name='工事区分')),
                ('relation_no', models.CharField(blank=True, max_length=10, null=True, verbose_name='連携システムNO')),
                ('erp_errormsg', models.CharField(blank=True, max_length=500, null=True, verbose_name='ERPエラーメッセージ ')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
            ],
        ),
        migrations.CreateModel(
            name='Estimate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_id', models.IntegerField(blank=True, null=True, verbose_name='工事id')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('vendor', models.CharField(blank=True, max_length=50, null=True, verbose_name='業者名')),
                ('estimate_price', models.IntegerField(blank=True, null=True, verbose_name='見積金額')),
                ('prospect_price', models.IntegerField(blank=True, null=True, verbose_name='見込金額')),
                ('entry_class', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録区分')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
                ('adoption_flag', models.IntegerField(blank=True, null=True, verbose_name='採用FL')),
                ('price_after_discount', models.IntegerField(blank=True, null=True, verbose_name='値引後金額')),
                ('discount_num', models.IntegerField(blank=True, null=True, verbose_name='値引回数')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='着工日')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='完工日')),
                ('management_class', models.CharField(blank=True, max_length=1, null=True, verbose_name='区分')),
                ('rem', models.CharField(blank=True, max_length=400, null=True, verbose_name='備考')),
            ],
        ),
        migrations.CreateModel(
            name='EvaluationCriteriaMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.CharField(blank=True, max_length=20, null=True, verbose_name='対象')),
                ('criteria_cd', models.CharField(blank=True, max_length=40, null=True, verbose_name='評価基準コード')),
                ('criteria_detail', models.CharField(blank=True, max_length=100, null=True, verbose_name='評価基準詳細')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='EvaluationDecisionMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.CharField(blank=True, max_length=20, null=True, verbose_name='対象')),
                ('evaluation_cd', models.CharField(blank=True, max_length=40, null=True, verbose_name='評価コード')),
                ('evaluation_point', models.IntegerField(blank=True, null=True, verbose_name='評価点数')),
                ('decision_rank', models.CharField(blank=True, max_length=20, null=True, verbose_name='判定ランク')),
                ('decision_rank_detail', models.CharField(blank=True, max_length=20, null=True, verbose_name='判定ランク詳細')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='EvaluationPointMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.IntegerField(blank=True, null=True, verbose_name='点数')),
                ('point_detail', models.CharField(blank=True, max_length=100, null=True, verbose_name='点数詳細')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('criteria', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='point_set', to='fms.EvaluationCriteriaMaster', verbose_name='評価基準id')),
            ],
        ),
        migrations.CreateModel(
            name='ExchangeTypeMaster',
            fields=[
                ('mex_type_cd', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='熱交換器型式CD')),
                ('mex_type_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='熱交換器型式名')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='FactoryLocationActMotiveMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='設置/変更')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='FCLTYCDMaster',
            fields=[
                ('FCLTY_CD', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='工程CD')),
                ('FCLTY_NM', models.CharField(blank=True, max_length=50, null=True, verbose_name='工程名')),
                ('DISP_ORDER', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('FCLTY_CLS_CD', models.CharField(blank=True, max_length=50, null=True, verbose_name='部署CD')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='FirePreventEquipNtfcCategoryMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='FirePreventStorageNtfcAmendmentMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amendment', models.CharField(blank=True, max_length=20, null=True, verbose_name='改廃')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='FirePreventStorageNtfcCategoryMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='FireServiceAcetyleneGasNtfcAmendmentMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amendment', models.CharField(blank=True, max_length=20, null=True, verbose_name='改廃')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='FireServiceAppActionMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(blank=True, max_length=20, null=True, verbose_name='扱い')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='FireServiceAppPlaceMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(blank=True, max_length=20, null=True, verbose_name='場所')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='FireServiceNtfcAmendmentMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amendment', models.CharField(blank=True, max_length=20, null=True, verbose_name='改廃')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='FireServiceNtfcPlaceMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(blank=True, max_length=20, null=True, verbose_name='場所')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='FireServiceQuantityNtfcPlaceMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(blank=True, max_length=20, null=True, verbose_name='場所')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='FireServiceTentativeAppActionMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(blank=True, max_length=20, null=True, verbose_name='扱い')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='FreeSpecDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_id', models.IntegerField(blank=True, null=True, verbose_name='工事id')),
                ('sub_no', models.IntegerField(blank=True, null=True, verbose_name='サブNo')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('required_function_id', models.IntegerField(blank=True, null=True, verbose_name='要求仕様id')),
                ('required_function_sub_no', models.IntegerField(blank=True, null=True, verbose_name='要求機能サブNO')),
                ('entry_class', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録区分')),
                ('detail', models.TextField(blank=True, max_length=4000, null=True, verbose_name='詳細')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='FreeSpecDetailTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_id', models.IntegerField(blank=True, null=True, verbose_name='テンプレートid')),
                ('page', models.IntegerField(blank=True, null=True, verbose_name='ページ')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('detail', models.TextField(blank=True, max_length=4000, null=True, verbose_name='詳細')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='FreeSpecTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_id', models.IntegerField(blank=True, null=True, verbose_name='テンプレートid')),
                ('template_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='テンプレート名')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='FunctionMaster',
            fields=[
                ('function_cd', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='機能cd')),
                ('function_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='機能名')),
                ('function_class', models.CharField(blank=True, max_length=20, null=True, verbose_name='機能分類')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='InputNgCharacter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ng_character', models.CharField(blank=True, max_length=10, null=True, verbose_name='禁止文字')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phenomenon_id', models.IntegerField(blank=True, null=True, verbose_name='案件NO')),
                ('sub_no', models.IntegerField(blank=True, null=True, verbose_name='サブNO')),
                ('inspection_detail', models.CharField(blank=True, max_length=200, null=True, verbose_name='検査診断内容')),
                ('inspection_result', models.CharField(blank=True, max_length=10, null=True, verbose_name='検査診断結果')),
                ('charge_team', models.IntegerField(blank=True, null=True, verbose_name='保全G対応')),
                ('measure', models.IntegerField(blank=True, null=True, verbose_name='対応方針')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
            ],
        ),
        migrations.CreateModel(
            name='LivingEnvEquipNtfcActionMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(blank=True, max_length=20, null=True, verbose_name='扱い')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='LivingEnvEquipNtfcCategoryMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.CharField(blank=True, max_length=40, null=True, verbose_name='対象')),
                ('target_id', models.IntegerField(blank=True, null=True, verbose_name='対象id')),
                ('action', models.CharField(blank=True, max_length=20, null=True, verbose_name='実行内容')),
                ('step', models.IntegerField(blank=True, null=True, verbose_name='工程')),
                ('operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='作業者')),
                ('operator_department', models.CharField(blank=True, max_length=20, null=True, verbose_name='作業者部署')),
                ('operator_division', models.CharField(blank=True, max_length=20, null=True, verbose_name='作業者部門')),
                ('operation_datetime', models.DateTimeField(blank=True, null=True, verbose_name='作業日時')),
                ('comment', models.CharField(blank=True, max_length=800, null=True, verbose_name='コメント')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算id')),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceAccountCodeDefinitionMaster',
            fields=[
                ('item_group_code', models.CharField(max_length=2, primary_key=True, serialize=False, verbose_name='品目グループコード')),
                ('cost_center_class_code', models.CharField(max_length=2, verbose_name='原価属性コード')),
                ('account_code', models.CharField(blank=True, max_length=16, null=True, verbose_name='勘定コード')),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceAccountCodeMaster',
            fields=[
                ('account_code', models.CharField(max_length=16, primary_key=True, serialize=False, verbose_name='勘定コード')),
                ('account_code_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='テキスト短')),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceAttachmentFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phenomenon_id', models.IntegerField(blank=True, null=True, verbose_name='案件NO')),
                ('sub_no', models.IntegerField(blank=True, null=True, verbose_name='サブNO')),
                ('equipment_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='機器NO')),
                ('history_no', models.IntegerField(blank=True, null=True, verbose_name='履歴NO')),
                ('mgt_class', models.CharField(blank=True, max_length=5, null=True, verbose_name='管理区分')),
                ('facility', models.CharField(blank=True, max_length=10, null=True, verbose_name='工場')),
                ('attachment_point', models.CharField(blank=True, max_length=5, null=True, verbose_name='添付ポイント')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceChargePersonMastar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceCostCenterMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_center', models.CharField(blank=True, max_length=10, null=True, verbose_name='原価センター')),
                ('instruction_no', models.CharField(blank=True, max_length=17, null=True, verbose_name='指図書NO')),
                ('account_code', models.CharField(blank=True, max_length=16, null=True, verbose_name='勘定コード')),
                ('year', models.IntegerField(blank=True, null=True, verbose_name='年度')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.DepartmentMaster', verbose_name='部署')),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceEquipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phenomenon_id', models.IntegerField(blank=True, null=True, verbose_name='案件NO')),
                ('t_fclty_ldgr_skey', models.IntegerField(blank=True, null=True, verbose_name='skey_機器')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceEstimate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phenomenon_id', models.IntegerField(blank=True, null=True, verbose_name='案件NO')),
                ('estimate_deadline', models.DateField(blank=True, null=True, verbose_name='決定見積提出期日')),
                ('construction_from', models.DateField(blank=True, null=True, verbose_name='決定工期_FROM')),
                ('construction_to', models.DateField(blank=True, null=True, verbose_name='決定工期_TO')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='決定納期')),
                ('delivery_location', models.CharField(blank=True, max_length=100, null=True, verbose_name='決定納入場所')),
                ('confirmed_vendor_no', models.IntegerField(blank=True, null=True, verbose_name='決定業者NO')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceEstimateStatusMaster',
            fields=[
                ('status_cd', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='進捗状態CD')),
                ('status_text', models.CharField(blank=True, max_length=20, null=True, verbose_name='進捗状態表記')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順序')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceEstimateVendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phenomenon_id', models.IntegerField(blank=True, null=True, verbose_name='案件NO')),
                ('vendor_no', models.IntegerField(blank=True, null=True, verbose_name='業者NO')),
                ('vendor_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='業者名')),
                ('req_date', models.DateField(blank=True, null=True, verbose_name='見積依頼日')),
                ('reply_date', models.DateField(blank=True, null=True, verbose_name='見積回答期日')),
                ('estimate_price', models.BigIntegerField(blank=True, null=True, verbose_name='本見積額')),
                ('price_after_discount', models.BigIntegerField(blank=True, null=True, verbose_name='交渉後見積額')),
                ('eva_delivery', models.CharField(blank=True, max_length=100, null=True, verbose_name='評価_工期/納期')),
                ('eva_price', models.BigIntegerField(blank=True, null=True, verbose_name='評価_見積査定額')),
                ('eva_estimate', models.CharField(blank=True, max_length=400, null=True, verbose_name='評価_見積査定')),
                ('eva_last_price', models.CharField(blank=True, max_length=100, null=True, verbose_name='評価_最終金額評価')),
                ('eva_other', models.CharField(blank=True, max_length=100, null=True, verbose_name='評価_その他')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.MaintenanceEstimateStatusMaster', verbose_name='進捗状態')),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceInspectionAcceptance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phenomenon_id', models.IntegerField(blank=True, null=True, verbose_name='案件NO')),
                ('documents_receipt_date', models.DateField(blank=True, null=True, verbose_name='提出資料受領日')),
                ('documents_rem', models.CharField(blank=True, max_length=400, null=True, verbose_name='提出資料備考')),
                ('documents_check_result', models.CharField(blank=True, max_length=20, null=True, verbose_name='提出資料確認結果')),
                ('receipt_send_date', models.DateField(blank=True, null=True, verbose_name='検収書送付日')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceInstructionNoMaster',
            fields=[
                ('instruction_code', models.CharField(max_length=17, primary_key=True, serialize=False, verbose_name='指図書コード')),
                ('instruction_code_textcontent', models.CharField(blank=True, max_length=40, null=True, verbose_name='テキスト短')),
                ('instruction_type', models.CharField(blank=True, max_length=4, null=True, verbose_name='指図書タイプ')),
                ('instruction_type_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='指図書タイプ名称')),
                ('cost_center', models.CharField(blank=True, max_length=10, null=True, verbose_name='利益センター')),
                ('instruction_status', models.DecimalField(blank=True, decimal_places=0, max_digits=2, null=True, verbose_name='指図ステータス')),
            ],
        ),
        migrations.CreateModel(
            name='ManagementClassMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('management_class_cd', models.CharField(blank=True, max_length=1, null=True, verbose_name='管理区分CD')),
                ('management_class_name', models.CharField(blank=True, max_length=2, null=True, verbose_name='管理区分名')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_cd', models.CharField(blank=True, max_length=20, null=True, verbose_name='物質記号')),
                ('material_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='物質名')),
                ('chemical_formula', models.CharField(blank=True, max_length=20, null=True, verbose_name='化学式')),
                ('sub_no', models.IntegerField(blank=True, null=True, verbose_name='サブNo')),
                ('normal_pressure', models.FloatField(blank=True, null=True, verbose_name='通常圧力')),
                ('str_normal_pressure', models.CharField(blank=True, max_length=30, null=True, verbose_name='通常圧力')),
                ('maximum_pressure', models.FloatField(blank=True, null=True, verbose_name='最高圧力')),
                ('minimum_pressure', models.FloatField(blank=True, null=True, verbose_name='最低圧力')),
                ('normal_temperature', models.FloatField(blank=True, null=True, verbose_name='通常温度')),
                ('str_normal_temperature', models.CharField(blank=True, max_length=30, null=True, verbose_name='通常温度')),
                ('maximum_temperature', models.FloatField(blank=True, null=True, verbose_name='最高温度')),
                ('minimum_temperature', models.FloatField(blank=True, null=True, verbose_name='最低温度')),
                ('concentration', models.FloatField(blank=True, null=True, verbose_name='濃度')),
                ('ph', models.FloatField(blank=True, null=True, verbose_name='pH')),
                ('str_ph', models.CharField(blank=True, max_length=30, null=True, verbose_name='pH')),
                ('viscosity', models.FloatField(blank=True, null=True, verbose_name='粘度')),
                ('angle_of_repose', models.CharField(blank=True, max_length=30, null=True, verbose_name='安息角')),
                ('bulk_specific_gravity', models.FloatField(blank=True, null=True, verbose_name='嵩密度')),
                ('str_bulk_specific_gravity', models.CharField(blank=True, max_length=30, null=True, verbose_name='嵩密度')),
                ('true_specific_gravity', models.FloatField(blank=True, null=True, verbose_name='真比重')),
                ('str_true_specific_gravity', models.CharField(blank=True, max_length=30, null=True, verbose_name='真比重')),
                ('apparent_specific_gravity', models.FloatField(blank=True, null=True, verbose_name='見掛比重')),
                ('str_apparent_specific_gravity', models.CharField(blank=True, max_length=30, null=True, verbose_name='見掛比重')),
                ('particle_size', models.FloatField(blank=True, null=True, verbose_name='粒径')),
                ('str_particle_size', models.CharField(blank=True, max_length=30, null=True, verbose_name='粒径')),
                ('moisture', models.FloatField(blank=True, null=True, verbose_name='水分')),
                ('str_moisture', models.CharField(blank=True, max_length=30, null=True, verbose_name='水分')),
                ('others', models.TextField(blank=True, max_length=1000, null=True, verbose_name='その他')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('concentration_unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.ConcentrationUnitMaster', verbose_name='濃度単位')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialStateMaster',
            fields=[
                ('state_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='状態id')),
                ('state_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='状態名')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='MCFrame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(blank=True, null=True, verbose_name='依頼id')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算id')),
                ('order_date', models.CharField(blank=True, max_length=8, null=True, verbose_name='購買発注日')),
                ('vendor_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='仕入先CD')),
                ('purchase_group_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='購買組織CD')),
                ('purchase_person', models.CharField(blank=True, max_length=20, null=True, verbose_name='購買グループ担当者')),
                ('currency_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='通貨CD')),
                ('account_class', models.CharField(blank=True, max_length=5, null=True, verbose_name='勘定設定')),
                ('item_code', models.CharField(blank=True, max_length=16, null=True, verbose_name='品目CD')),
                ('item_text', models.CharField(blank=True, max_length=40, null=True, verbose_name='品目テキスト')),
                ('order_amount', models.IntegerField(blank=True, null=True, verbose_name='購買発注量')),
                ('ordering_unit', models.CharField(blank=True, max_length=9, null=True, verbose_name='発注単位')),
                ('delivery_date', models.CharField(blank=True, max_length=8, null=True, verbose_name='納入期日')),
                ('amount_per_base_unit', models.CharField(blank=True, max_length=8, null=True, verbose_name='購買価格単位（Per）')),
                ('base_unit_amount', models.CharField(blank=True, max_length=8, null=True, verbose_name='購買価格単位')),
                ('purchase_order_no', models.CharField(blank=True, max_length=15, null=True, verbose_name='購買発注NO ')),
                ('erp_errormsg', models.CharField(blank=True, max_length=500, null=True, verbose_name='ERPエラーメッセージ ')),
                ('item_group_code', models.CharField(blank=True, max_length=9, null=True, verbose_name='品目グループCD')),
                ('item_code_status', models.CharField(blank=True, max_length=1, null=True, verbose_name='品目マスタ登録ステータス')),
                ('plant_code', models.CharField(blank=True, max_length=4, null=True, verbose_name='プラントCD')),
                ('storage_space_code', models.CharField(blank=True, max_length=4, null=True, verbose_name='保管場所CD')),
                ('purchase_trace_no', models.CharField(blank=True, max_length=4, null=True, verbose_name='購買依頼追跡番号')),
                ('order_person', models.CharField(blank=True, max_length=25, null=True, verbose_name='依頼者NTユーザ')),
                ('rem', models.CharField(blank=True, max_length=50, null=True, verbose_name='項目注記2')),
                ('storage_space_rem', models.CharField(blank=True, max_length=50, null=True, verbose_name='納入保管場所注記')),
                ('total_price', models.BigIntegerField(blank=True, null=True, verbose_name='総額')),
                ('discount_price', models.BigIntegerField(blank=True, null=True, verbose_name='値引 (金額)')),
                ('account_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='勘定CD')),
                ('cost_center', models.CharField(blank=True, max_length=10, null=True, verbose_name='原価センタ')),
                ('instruction_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='指図書CD')),
                ('consumption_tax_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='消費税コード')),
                ('work_class', models.CharField(blank=True, max_length=5, null=True, verbose_name='工事区分')),
                ('relation_no', models.CharField(blank=True, max_length=10, null=True, verbose_name='連携システムNO')),
                ('item_detail_text', models.CharField(blank=True, max_length=30, null=True, verbose_name='明細テキスト')),
                ('construction_start_date', models.CharField(blank=True, max_length=8, null=True, verbose_name='着工予定日')),
                ('status', models.IntegerField(blank=True, null=True, verbose_name='ステータス')),
                ('department', models.CharField(blank=True, max_length=20, null=True, verbose_name='部署')),
                ('division', models.CharField(blank=True, max_length=20, null=True, verbose_name='部門')),
                ('specification_person_in_charge', models.CharField(blank=True, max_length=20, null=True, verbose_name='仕様書担当者')),
                ('procurement_person_in_charge', models.CharField(blank=True, max_length=20, null=True, verbose_name='調達担当者')),
                ('request_department', models.CharField(blank=True, max_length=50, null=True, verbose_name='依頼部門')),
                ('order_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='購買発注番号')),
                ('order_type_classification', models.IntegerField(blank=True, null=True, verbose_name='注文書種類区分')),
                ('numbering', models.IntegerField(blank=True, null=True, verbose_name='ナンバリング')),
                ('year', models.IntegerField(blank=True, null=True, verbose_name='年度')),
                ('detail_no', models.IntegerField(blank=True, null=True, verbose_name='明細番号')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='Measure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phenomenon_id', models.IntegerField(blank=True, null=True, verbose_name='案件NO')),
                ('sub_no', models.IntegerField(blank=True, null=True, verbose_name='サブNO')),
                ('measure_order_detail', models.CharField(blank=True, max_length=1000, null=True, verbose_name='工事内容')),
                ('m_exe_cls_skey', models.IntegerField(blank=True, null=True, verbose_name='skey_実施区分')),
                ('malfunction_class', models.CharField(blank=True, max_length=30, null=True, verbose_name='故障/作業種別')),
                ('desired_delivery_date_start', models.DateField(blank=True, null=True, verbose_name='希望納期日FROM')),
                ('desired_delivery_date_end', models.DateField(blank=True, null=True, verbose_name='希望納期日TO')),
                ('instruction_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='指図書NO')),
                ('cost_center', models.CharField(blank=True, max_length=10, null=True, verbose_name='原価センタ')),
                ('account_cd', models.CharField(blank=True, max_length=20, null=True, verbose_name='勘定コード')),
                ('diagnosis_class', models.IntegerField(blank=True, null=True, verbose_name='診断')),
                ('desired_vendor', models.CharField(blank=True, max_length=30, null=True, verbose_name='希望業者')),
                ('maintenance_status', models.IntegerField(blank=True, null=True, verbose_name='メンテナンス対応状況')),
                ('response_request_date', models.DateField(blank=True, null=True, verbose_name='対応依頼日')),
                ('orders_received_person', models.CharField(blank=True, max_length=50, null=True, verbose_name='依頼受付者')),
                ('notification_required_flag', models.IntegerField(blank=True, null=True, verbose_name='届出必要')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
                ('item_class', models.IntegerField(blank=True, null=True, verbose_name='案件区分')),
                ('desired_delivery_date_f', models.DateTimeField(blank=True, null=True, verbose_name='希望納期日FROM')),
                ('desired_delivery_date_t', models.DateTimeField(blank=True, null=True, verbose_name='希望納期日TO')),
                ('work_order_charge_department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.DepartmentMaster', verbose_name='原課担当部署')),
            ],
        ),
        migrations.CreateModel(
            name='MPlanBasisMaster',
            fields=[
                ('basis_cd', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='申請希望額根拠CD')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='名称')),
                ('detail', models.CharField(blank=True, max_length=100, null=True, verbose_name='詳細')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='MyBudgetMaterialData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_cd', models.CharField(blank=True, max_length=20, null=True, verbose_name='物質記号')),
                ('material_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='物質名')),
                ('chemical_formula', models.CharField(blank=True, max_length=20, null=True, verbose_name='化学式')),
                ('normal_pressure', models.FloatField(blank=True, null=True, verbose_name='通常圧力')),
                ('str_normal_pressure', models.CharField(blank=True, max_length=30, null=True, verbose_name='通常圧力')),
                ('maximum_pressure', models.FloatField(blank=True, null=True, verbose_name='最高圧力')),
                ('minimum_pressure', models.FloatField(blank=True, null=True, verbose_name='最低圧力')),
                ('normal_temperature', models.FloatField(blank=True, null=True, verbose_name='通常温度')),
                ('str_normal_temperature', models.CharField(blank=True, max_length=30, null=True, verbose_name='通常温度')),
                ('maximum_temperature', models.FloatField(blank=True, null=True, verbose_name='最高温度')),
                ('minimum_temperature', models.FloatField(blank=True, null=True, verbose_name='最低温度')),
                ('concentration', models.FloatField(blank=True, null=True, verbose_name='濃度')),
                ('ph', models.FloatField(blank=True, null=True, verbose_name='pH')),
                ('str_ph', models.CharField(blank=True, max_length=30, null=True, verbose_name='pH')),
                ('viscosity', models.FloatField(blank=True, null=True, verbose_name='粘度')),
                ('angle_of_repose', models.CharField(blank=True, max_length=30, null=True, verbose_name='安息角')),
                ('bulk_specific_gravity', models.FloatField(blank=True, null=True, verbose_name='嵩密度')),
                ('str_bulk_specific_gravity', models.CharField(blank=True, max_length=30, null=True, verbose_name='嵩密度')),
                ('true_specific_gravity', models.FloatField(blank=True, null=True, verbose_name='真比重')),
                ('str_true_specific_gravity', models.CharField(blank=True, max_length=30, null=True, verbose_name='真比重')),
                ('apparent_specific_gravity', models.FloatField(blank=True, null=True, verbose_name='見掛比重')),
                ('str_apparent_specific_gravity', models.CharField(blank=True, max_length=30, null=True, verbose_name='見掛比重')),
                ('particle_size', models.FloatField(blank=True, null=True, verbose_name='粒径')),
                ('str_particle_size', models.CharField(blank=True, max_length=30, null=True, verbose_name='粒径')),
                ('moisture', models.FloatField(blank=True, null=True, verbose_name='水分')),
                ('str_moisture', models.CharField(blank=True, max_length=30, null=True, verbose_name='水分')),
                ('others', models.TextField(blank=True, max_length=1000, null=True, verbose_name='その他')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('concentration_unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.ConcentrationUnitMaster', verbose_name='濃度単位')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phenomenon_id', models.IntegerField(blank=True, null=True, verbose_name='案件NO')),
                ('sub_no', models.IntegerField(blank=True, null=True, verbose_name='サブNO')),
                ('notification', models.IntegerField(blank=True, null=True, verbose_name='届出要否FL')),
                ('law_facility', models.IntegerField(blank=True, null=True, verbose_name='法令該当施設FL')),
                ('comment', models.TextField(blank=True, max_length=1000, null=True, verbose_name='原課部署コメント')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('cancel_comment', models.TextField(blank=True, max_length=1000, null=True, verbose_name='中止理由')),
                ('cancel_flag', models.IntegerField(blank=True, null=True, verbose_name='中止FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phenomenon_id', models.IntegerField(blank=True, null=True, verbose_name='案件ID')),
                ('order_id', models.IntegerField(blank=True, null=True, verbose_name='依頼ID')),
                ('contact_request', models.IntegerField(blank=True, null=True, verbose_name='依頼先')),
                ('order_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='依頼名')),
                ('order_name_extension_name', models.CharField(blank=True, max_length=10, null=True, verbose_name='依頼名(拡張)')),
                ('expected_price', models.IntegerField(blank=True, null=True, verbose_name='予想金額')),
                ('desired_start_date', models.DateField(blank=True, null=True, verbose_name='着工希望開始日')),
                ('desired_end_date', models.DateField(blank=True, null=True, verbose_name='着工希望完工日')),
                ('order_permit_person', models.CharField(blank=True, max_length=25, null=True, verbose_name='原課担当者')),
                ('plant_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='部署工場名')),
                ('m_location_skey', models.IntegerField(blank=True, null=True, verbose_name='skey_工場区分')),
                ('order_detail', models.CharField(blank=True, max_length=1000, null=True, verbose_name='依頼内容')),
                ('rem', models.CharField(blank=True, max_length=400, null=True, verbose_name='備考')),
                ('is_need_input_plantia', models.CharField(blank=True, max_length=5, null=True, verbose_name='PLANTIA入力要否')),
                ('order_detail_for_vendor', models.CharField(blank=True, max_length=1000, null=True, verbose_name='業者依頼内容')),
                ('rem_for_plantia_data', models.CharField(blank=True, max_length=400, null=True, verbose_name='PLANTIA関係備考')),
                ('order_vendor', models.CharField(blank=True, max_length=100, null=True, verbose_name='依頼者希望業者')),
                ('transfer_complete_flag', models.IntegerField(blank=True, null=True, verbose_name='転送完了FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.DepartmentMaster', verbose_name='原課担当部署')),
            ],
        ),
        migrations.CreateModel(
            name='OrderForIEP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phenomenon_id', models.IntegerField(blank=True, null=True, verbose_name='案件NO')),
                ('order_id', models.IntegerField(blank=True, null=True, verbose_name='依頼ID')),
                ('department', models.CharField(blank=True, max_length=50, null=True, verbose_name='部門')),
                ('cost_center', models.CharField(blank=True, max_length=10, null=True, verbose_name='原価センタ')),
                ('order_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='依頼名')),
                ('order_person', models.CharField(blank=True, max_length=25, null=True, verbose_name='依頼者')),
                ('desired_start_date', models.DateTimeField(blank=True, null=True, verbose_name='希望開始日')),
                ('desired_construction_end_date', models.DateTimeField(blank=True, null=True, verbose_name='希望完工日')),
                ('order_date', models.DateTimeField(blank=True, max_length=8, null=True, verbose_name='依頼日')),
                ('order_permit_person', models.CharField(blank=True, max_length=25, null=True, verbose_name='依頼承認者')),
                ('account_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='勘定CD')),
                ('instruction_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='指図書CD')),
                ('construction_details', models.CharField(blank=True, max_length=1000, null=True, verbose_name='工事内容')),
                ('order_rem', models.CharField(blank=True, max_length=500, null=True, verbose_name='依頼備考')),
                ('order_rem_2', models.CharField(blank=True, max_length=500, null=True, verbose_name='注文備考')),
                ('orders_received_person', models.CharField(blank=True, max_length=50, null=True, verbose_name='依頼受付者')),
                ('status', models.IntegerField(blank=True, null=True, verbose_name='ステータス')),
                ('item_class', models.IntegerField(blank=True, null=True, verbose_name='案件区分')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
            ],
        ),
        migrations.CreateModel(
            name='PeriodClassMaster',
            fields=[
                ('period_class_cd', models.IntegerField(primary_key=True, serialize=False, verbose_name='期CD')),
                ('period_class_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='期区分名')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='Phenomenon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phenomenon_id', models.IntegerField(blank=True, null=True, verbose_name='案件NO')),
                ('sub_no', models.IntegerField(blank=True, null=True, verbose_name='サブNO')),
                ('project_title', models.CharField(blank=True, max_length=40, null=True, verbose_name='案件名')),
                ('discovery_date', models.DateField(blank=True, null=True, verbose_name='発見日')),
                ('m_condition_cd_skey', models.IntegerField(blank=True, null=True, verbose_name='skey_状況')),
                ('condition_detail', models.CharField(blank=True, max_length=400, null=True, verbose_name='状況詳細')),
                ('improvement_proposal', models.CharField(blank=True, max_length=400, null=True, verbose_name='改善提案')),
                ('m_mgt_cls_skey', models.IntegerField(blank=True, null=True, verbose_name='skey_管理区分')),
                ('m_location_skey', models.IntegerField(blank=True, null=True, verbose_name='skey_工場区分')),
                ('equipment_no', models.CharField(blank=True, max_length=200, null=True, verbose_name='機器番号')),
                ('jurisdiction_area', models.CharField(blank=True, max_length=20, null=True, verbose_name='保全担当')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
                ('discovery_datetime', models.DateTimeField(blank=True, null=True, verbose_name='発見日時')),
                ('discoverer', models.CharField(blank=True, max_length=20, null=True, verbose_name='発見者')),
                ('condition', models.CharField(blank=True, max_length=20, null=True, verbose_name='状況')),
                ('management_class', models.CharField(blank=True, max_length=5, null=True, verbose_name='管理区分')),
                ('factory_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='工場名')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.DepartmentMaster', verbose_name=' 部署')),
            ],
        ),
        migrations.CreateModel(
            name='PlanClassMaster',
            fields=[
                ('class_cd', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='計画区分CD')),
                ('name', models.CharField(blank=True, max_length=40, null=True, verbose_name='名称')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='PlanningChargePerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算id')),
                ('charge_person', models.CharField(blank=True, max_length=150, null=True, verbose_name='計画担当者')),
                ('main_charge_flag', models.IntegerField(blank=True, null=True, verbose_name='主担当FL')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
                ('complete_flag', models.IntegerField(blank=True, null=True, verbose_name='完了FL')),
            ],
        ),
        migrations.CreateModel(
            name='PressGasAppMotiveMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='製造/変更')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='PressGasConsumptionNtfcAmendmentMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amendment', models.CharField(blank=True, max_length=20, null=True, verbose_name='改廃')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='PressGasFrozenGasAppMotiveMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='製造/変更')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='PressGasFrozenGasNtfcAmendmentMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amendment', models.CharField(blank=True, max_length=20, null=True, verbose_name='改廃')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='PressGasLpgAppMotiveMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='製造/変更')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='PressGasLpgNtfcAmendmentMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amendment', models.CharField(blank=True, max_length=20, null=True, verbose_name='改廃')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='PressGasNtfcAmendmentMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amendment', models.CharField(blank=True, max_length=20, null=True, verbose_name='改廃')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='PressureUnitMaster',
            fields=[
                ('unit_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='単位id')),
                ('unit', models.CharField(blank=True, max_length=20, null=True, verbose_name='単位')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='ProBudgetUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算ID')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNO')),
                ('budget_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='予算NO')),
                ('budget_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='予算名')),
                ('req_func', models.CharField(blank=True, max_length=20, null=True, verbose_name='要求機能')),
                ('department', models.CharField(blank=True, max_length=20, null=True, verbose_name='部署')),
                ('division', models.CharField(blank=True, max_length=20, null=True, verbose_name='部門')),
                ('jurisdiction_area', models.CharField(blank=True, max_length=20, null=True, verbose_name='所管エリア')),
                ('area_person_in_charge', models.CharField(blank=True, max_length=20, null=True, verbose_name='エリア管理者')),
                ('original_sec_person_in_charge', models.CharField(blank=True, max_length=20, null=True, verbose_name='原課担当者')),
                ('construction_detail', models.CharField(blank=True, max_length=400, null=True, verbose_name='工事内容詳細')),
                ('sche_gov_inspection_date', models.DateField(blank=True, null=True, verbose_name='官庁検査予定日')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('cancel_flag', models.IntegerField(blank=True, null=True, verbose_name='中止FL')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessMaster',
            fields=[
                ('process_cd2', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='工程CD2')),
                ('process_cd', models.CharField(max_length=10, verbose_name='工程CD')),
                ('process_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='工程名')),
                ('department', models.CharField(blank=True, max_length=10, null=True, verbose_name='部署')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='ProConstructionPrep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算ID')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNO')),
                ('budget_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='予算NO')),
                ('budget_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='予算名')),
                ('construction_id', models.IntegerField(blank=True, null=True, verbose_name='工事ID')),
                ('sub_id', models.IntegerField(blank=True, null=True, verbose_name='サブNO')),
                ('delivery_prep_period_from', models.DateField(blank=True, null=True, verbose_name='引渡準備期間_FROM')),
                ('delivery_prep_period_to', models.DateField(blank=True, null=True, verbose_name='引渡準備期間_TO')),
                ('prep_contents', models.CharField(blank=True, max_length=400, null=True, verbose_name='準備内容')),
                ('prep_result', models.CharField(blank=True, max_length=20, null=True, verbose_name='準備結果')),
                ('implementation_department', models.CharField(blank=True, max_length=20, null=True, verbose_name='実施部署')),
                ('execution_department_manager', models.CharField(blank=True, max_length=20, null=True, verbose_name='実施部署責任者')),
                ('memo', models.CharField(blank=True, max_length=400, null=True, verbose_name='備考')),
                ('delivery_prep_completion_date', models.DateField(blank=True, null=True, verbose_name='引渡準備完了日')),
                ('required_procedure', models.CharField(blank=True, max_length=20, null=True, verbose_name='必要手続き')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
            ],
        ),
        migrations.CreateModel(
            name='ProConstructionQualityResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算ID')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNO')),
                ('budget_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='予算NO')),
                ('budget_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='予算名')),
                ('construction_id', models.IntegerField(blank=True, null=True, verbose_name='工事ID')),
                ('sub_id', models.IntegerField(blank=True, null=True, verbose_name='サブNO')),
                ('quality_inspection_result', models.CharField(blank=True, max_length=20, null=True, verbose_name='品質検査結果')),
                ('production_permit_date', models.DateField(blank=True, null=True, verbose_name='生産許可日')),
                ('memo', models.CharField(blank=True, max_length=400, null=True, verbose_name='備考欄')),
                ('submitted_doc', models.CharField(blank=True, max_length=100, null=True, verbose_name='提出資料データ')),
                ('date_of_receipt_of_submitted_materials', models.DateField(blank=True, null=True, verbose_name='提出資料受領日')),
                ('submitted_doc_memo', models.CharField(blank=True, max_length=400, null=True, verbose_name='提出書類の備考欄')),
                ('check_result', models.CharField(blank=True, max_length=20, null=True, verbose_name='提出書類の内容確認結果')),
                ('completion_notification', models.CharField(blank=True, max_length=100, null=True, verbose_name='竣工届データ')),
                ('acceptance_date', models.DateField(blank=True, null=True, verbose_name='検収実施日')),
                ('receipt', models.CharField(blank=True, max_length=100, null=True, verbose_name='検収書電子データ')),
                ('receipt_sending_date', models.DateField(blank=True, null=True, verbose_name='検収書送付日')),
                ('invoice', models.CharField(blank=True, max_length=100, null=True, verbose_name='請求書電子データ')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
                ('construction_completion_date', models.DateField(blank=True, null=True, verbose_name='工事完了日')),
            ],
        ),
        migrations.CreateModel(
            name='ProDelivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算ID')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNO')),
                ('budget_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='予算NO')),
                ('budget_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='予算名')),
                ('construction_id', models.IntegerField(blank=True, null=True, verbose_name='工事ID')),
                ('sub_id', models.IntegerField(blank=True, null=True, verbose_name='サブNO')),
                ('scheduled_date', models.DateField(blank=True, null=True, verbose_name='工事(納入)予定日')),
                ('scheduled_datime', models.DateTimeField(blank=True, null=True, verbose_name='工事(納入)時刻')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='納入日')),
                ('storage_loc', models.CharField(blank=True, max_length=400, null=True, verbose_name='保管場所')),
                ('delivery_note_data', models.CharField(blank=True, max_length=100, null=True, verbose_name='納品書データ')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
            ],
        ),
        migrations.CreateModel(
            name='ProEstimates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算ID')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNO')),
                ('budget_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='予算NO')),
                ('budget_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='予算名')),
                ('construction_id', models.IntegerField(blank=True, null=True, verbose_name='工事ID')),
                ('sub_id', models.IntegerField(blank=True, null=True, verbose_name='サブNO')),
                ('candidate_vendor1', models.CharField(blank=True, max_length=100, null=True, verbose_name='候補業者1')),
                ('maker_name1', models.CharField(blank=True, max_length=100, null=True, verbose_name='メーカー名1')),
                ('quotation_req_date1', models.DateField(blank=True, null=True, verbose_name='見積依頼日1')),
                ('estimated_reply_date1', models.DateField(blank=True, null=True, verbose_name='見積回答期日1')),
                ('delivery_date1_from', models.DateField(blank=True, null=True, verbose_name='工期/納期日1_FROM')),
                ('delivery_date1_to', models.DateField(blank=True, null=True, verbose_name='工期/納期日1_TO')),
                ('last_estimated_amount1', models.IntegerField(blank=True, null=True, verbose_name='本見積額1')),
                ('last_estimated_discount1', models.IntegerField(blank=True, null=True, verbose_name='出精値引額1')),
                ('estimated_amount_af_nego1', models.IntegerField(blank=True, null=True, verbose_name='交渉後見積額1')),
                ('estimated_data1', models.CharField(blank=True, max_length=100, null=True, verbose_name='見積書データ1')),
                ('eva_delivery_date1', models.CharField(blank=True, max_length=40, null=True, verbose_name='工期/納期1')),
                ('eva_estimated_valuation_amount1', models.CharField(blank=True, max_length=400, null=True, verbose_name='見積査定1')),
                ('eva_estimated_assessment_price1', models.IntegerField(blank=True, null=True, verbose_name='見積査定額1')),
                ('eva_final_price1', models.CharField(blank=True, max_length=400, null=True, verbose_name='最終金額評価1')),
                ('eva_other1', models.CharField(blank=True, max_length=400, null=True, verbose_name='その他1')),
                ('candidate_vendor2', models.CharField(blank=True, max_length=100, null=True, verbose_name='候補業者2')),
                ('maker_name2', models.CharField(blank=True, max_length=100, null=True, verbose_name='メーカー名2')),
                ('quotation_req_date2', models.DateField(blank=True, null=True, verbose_name='見積依頼日2')),
                ('estimated_reply_date2', models.DateField(blank=True, null=True, verbose_name='見積回答期日2')),
                ('delivery_date2_from', models.DateField(blank=True, null=True, verbose_name='工期/納期日2_FROM')),
                ('delivery_date2_to', models.DateField(blank=True, null=True, verbose_name='工期/納期日2_TO')),
                ('last_estimated_amount2', models.IntegerField(blank=True, null=True, verbose_name='本見積額2')),
                ('last_estimated_discount2', models.IntegerField(blank=True, null=True, verbose_name='出精値引額2')),
                ('estimated_amount_af_nego2', models.IntegerField(blank=True, null=True, verbose_name='交渉後見積額2')),
                ('estimated_data2', models.CharField(blank=True, max_length=100, null=True, verbose_name='見積書データ2')),
                ('eva_delivery_date2', models.CharField(blank=True, max_length=40, null=True, verbose_name='工期/納期2')),
                ('eva_estimated_valuation_amount2', models.CharField(blank=True, max_length=400, null=True, verbose_name='見積査定2')),
                ('eva_estimated_assessment_price2', models.IntegerField(blank=True, null=True, verbose_name='見積査定額2')),
                ('eva_final_price2', models.CharField(blank=True, max_length=400, null=True, verbose_name='最終金額評価2')),
                ('eva_other2', models.CharField(blank=True, max_length=400, null=True, verbose_name='その他2')),
                ('candidate_vendor3', models.CharField(blank=True, max_length=100, null=True, verbose_name='候補業者3')),
                ('maker_name3', models.CharField(blank=True, max_length=100, null=True, verbose_name='メーカー名3')),
                ('quotation_req_date3', models.DateField(blank=True, null=True, verbose_name='見積依頼日3')),
                ('estimated_reply_date3', models.DateField(blank=True, null=True, verbose_name='見積回答期日3')),
                ('delivery_date3_from', models.DateField(blank=True, null=True, verbose_name='工期/納期日3_FROM')),
                ('delivery_date3_to', models.DateField(blank=True, null=True, verbose_name='工期/納期日3_TO')),
                ('last_estimated_amount3', models.IntegerField(blank=True, null=True, verbose_name='本見積額3')),
                ('last_estimated_discount3', models.IntegerField(blank=True, null=True, verbose_name='出精値引額3')),
                ('estimated_amount_af_nego3', models.IntegerField(blank=True, null=True, verbose_name='交渉後見積額3')),
                ('estimated_data3', models.CharField(blank=True, max_length=100, null=True, verbose_name='見積書データ3')),
                ('eva_delivery_date3', models.CharField(blank=True, max_length=40, null=True, verbose_name='工期/納期3')),
                ('eva_estimated_valuation_amount3', models.CharField(blank=True, max_length=400, null=True, verbose_name='見積査定3')),
                ('eva_estimated_assessment_price3', models.IntegerField(blank=True, null=True, verbose_name='見積査定額3')),
                ('eva_final_price3', models.CharField(blank=True, max_length=400, null=True, verbose_name='最終金額評価3')),
                ('eva_other3', models.CharField(blank=True, max_length=400, null=True, verbose_name='その他3')),
                ('candidate_vendor4', models.CharField(blank=True, max_length=100, null=True, verbose_name='候補業者4')),
                ('maker_name4', models.CharField(blank=True, max_length=100, null=True, verbose_name='メーカー名4')),
                ('quotation_req_date4', models.DateField(blank=True, null=True, verbose_name='見積依頼日4')),
                ('estimated_reply_date4', models.DateField(blank=True, null=True, verbose_name='見積回答期日4')),
                ('delivery_date4_from', models.DateField(blank=True, null=True, verbose_name='工期/納期日4_FROM')),
                ('delivery_date4_to', models.DateField(blank=True, null=True, verbose_name='工期/納期日4_TO')),
                ('last_estimated_amount4', models.IntegerField(blank=True, null=True, verbose_name='本見積額4')),
                ('last_estimated_discount4', models.IntegerField(blank=True, null=True, verbose_name='出精値引額4')),
                ('estimated_amount_af_nego4', models.IntegerField(blank=True, null=True, verbose_name='交渉後見積額4')),
                ('estimated_data4', models.CharField(blank=True, max_length=100, null=True, verbose_name='見積書データ4')),
                ('eva_delivery_date4', models.CharField(blank=True, max_length=40, null=True, verbose_name='工期/納期4')),
                ('eva_estimated_valuation_amount4', models.CharField(blank=True, max_length=400, null=True, verbose_name='見積査定4')),
                ('eva_estimated_assessment_price4', models.IntegerField(blank=True, null=True, verbose_name='見積査定額4')),
                ('eva_final_price4', models.CharField(blank=True, max_length=400, null=True, verbose_name='最終金額評価4')),
                ('eva_other4', models.CharField(blank=True, max_length=400, null=True, verbose_name='その他4')),
                ('candidate_vendor5', models.CharField(blank=True, max_length=100, null=True, verbose_name='候補業者5')),
                ('maker_name5', models.CharField(blank=True, max_length=100, null=True, verbose_name='メーカー名5')),
                ('quotation_req_date5', models.DateField(blank=True, null=True, verbose_name='見積依頼日5')),
                ('estimated_reply_date5', models.DateField(blank=True, null=True, verbose_name='見積回答期日5')),
                ('delivery_date5_from', models.DateField(blank=True, null=True, verbose_name='工期/納期日5_FROM')),
                ('delivery_date5_to', models.DateField(blank=True, null=True, verbose_name='工期/納期日5_TO')),
                ('last_estimated_amount5', models.IntegerField(blank=True, null=True, verbose_name='本見積額5')),
                ('last_estimated_discount5', models.IntegerField(blank=True, null=True, verbose_name='出精値引額5')),
                ('estimated_amount_af_nego5', models.IntegerField(blank=True, null=True, verbose_name='交渉後見積額5')),
                ('estimated_data5', models.CharField(blank=True, max_length=100, null=True, verbose_name='見積書データ5')),
                ('eva_delivery_date5', models.CharField(blank=True, max_length=40, null=True, verbose_name='工期/納期5')),
                ('eva_estimated_valuation_amount5', models.CharField(blank=True, max_length=400, null=True, verbose_name='見積査定5')),
                ('eva_estimated_assessment_price5', models.IntegerField(blank=True, null=True, verbose_name='見積査定額5')),
                ('eva_final_price5', models.CharField(blank=True, max_length=400, null=True, verbose_name='最終金額評価5')),
                ('eva_other5', models.CharField(blank=True, max_length=400, null=True, verbose_name='その他5')),
                ('confirmed_vendor', models.CharField(blank=True, max_length=100, null=True, verbose_name='確定業者')),
                ('confirmed_last_estimated_amount', models.IntegerField(blank=True, null=True, verbose_name='確定本見積額')),
                ('confirmed_estimated_amount_af_nego', models.IntegerField(blank=True, null=True, verbose_name='確定交渉後見積額')),
                ('estimated_deadline_date', models.DateField(blank=True, null=True, verbose_name='決定見積提出期日')),
                ('fixed_delivery_date', models.DateField(blank=True, null=True, verbose_name='決定納期')),
                ('fixed_delivery_date_from', models.DateField(blank=True, null=True, verbose_name='決定工期_FROM')),
                ('fixed_delivery_date_to', models.DateField(blank=True, null=True, verbose_name='決定工期_TO')),
                ('fixed_delivery_location', models.CharField(blank=True, max_length=100, null=True, verbose_name='決定納入場所')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
            ],
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.CharField(blank=True, max_length=20, null=True, verbose_name='対象')),
                ('target_id', models.IntegerField(blank=True, null=True, verbose_name='対象id')),
                ('present_step', models.IntegerField(blank=True, null=True, verbose_name='工程')),
                ('present_department', models.CharField(blank=True, max_length=20, null=True, verbose_name='作業部署')),
                ('present_division', models.CharField(blank=True, max_length=20, null=True, verbose_name='作業部門')),
                ('present_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='次作業者')),
                ('last_operation_step', models.IntegerField(blank=True, null=True, verbose_name='前作業')),
                ('last_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='前作業者')),
                ('last_operation_datetime', models.DateTimeField(blank=True, null=True, verbose_name='前作業日時')),
            ],
        ),
        migrations.CreateModel(
            name='ProIndividualContractDoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算ID')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNO')),
                ('budget_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='予算NO')),
                ('budget_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='予算名')),
                ('construction_id', models.IntegerField(blank=True, null=True, verbose_name='工事ID')),
                ('sub_id', models.IntegerField(blank=True, null=True, verbose_name='サブNO')),
                ('order_classification', models.CharField(blank=True, max_length=20, null=True, verbose_name='注文分類')),
                ('tax_kbn', models.CharField(blank=True, max_length=20, null=True, verbose_name='課税')),
                ('order_issuance_date', models.DateField(blank=True, null=True, verbose_name='注文書発行日')),
                ('order_creator', models.CharField(blank=True, max_length=20, null=True, verbose_name='注文書作成者')),
                ('item_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='品目コード')),
                ('item_group', models.CharField(blank=True, max_length=20, null=True, verbose_name='品目グループ')),
                ('payment_terms', models.CharField(blank=True, max_length=20, null=True, verbose_name='支払い条件')),
                ('individual_contract_terms', models.CharField(blank=True, max_length=20, null=True, verbose_name='個別契約条件')),
                ('order_no', models.IntegerField(blank=True, null=True, verbose_name='注文番号')),
                ('construction_classification', models.CharField(blank=True, max_length=20, null=True, verbose_name='工事分類')),
                ('order_data', models.CharField(blank=True, max_length=100, null=True, verbose_name='注文書データ')),
                ('order_confirmation_data', models.CharField(blank=True, max_length=100, null=True, verbose_name='注文請書データ')),
                ('numbering', models.IntegerField(blank=True, null=True, verbose_name='ナンバリング')),
                ('vendor_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='仕入先CD')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
            ],
        ),
        migrations.CreateModel(
            name='ProInspectionAcceptance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算ID')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNO')),
                ('budget_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='予算NO')),
                ('budget_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='予算名')),
                ('construction_id', models.IntegerField(blank=True, null=True, verbose_name='工事ID')),
                ('sub_id', models.IntegerField(blank=True, null=True, verbose_name='サブNO')),
                ('order_classification_from', models.DateField(blank=True, null=True, verbose_name='品質/受入検査実施日_FROM')),
                ('order_classification_to', models.DateField(blank=True, null=True, verbose_name='品質/受入検査実施日_TO')),
                ('inspection_results', models.CharField(blank=True, max_length=400, null=True, verbose_name='検査結果')),
                ('inspection_date', models.CharField(blank=True, max_length=40, null=True, verbose_name='品質/受入検査結果データ')),
                ('judge_kbn', models.CharField(blank=True, max_length=20, null=True, verbose_name='判定区分')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
            ],
        ),
        migrations.CreateModel(
            name='ProInspectionResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算ID')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNO')),
                ('budget_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='予算NO')),
                ('budget_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='予算名')),
                ('construction_id', models.IntegerField(blank=True, null=True, verbose_name='工事ID')),
                ('sub_id', models.IntegerField(blank=True, null=True, verbose_name='サブNO')),
                ('order_classification_from', models.DateField(blank=True, null=True, verbose_name='品質/立会検査実施日_FROM')),
                ('order_classification_to', models.DateField(blank=True, null=True, verbose_name='品質/立会検査実施日_TO')),
                ('inspection_results', models.CharField(blank=True, max_length=400, null=True, verbose_name='検査結果')),
                ('inspection_date', models.CharField(blank=True, max_length=100, null=True, verbose_name='品質/立会検査結果データ')),
                ('judge_kbn', models.CharField(blank=True, max_length=20, null=True, verbose_name='判定区分')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
            ],
        ),
        migrations.CreateModel(
            name='ProSpecificationUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算ID')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNO')),
                ('budget_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='予算NO')),
                ('budget_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='予算名')),
                ('construction_id', models.IntegerField(blank=True, null=True, verbose_name='工事ID')),
                ('sub_id', models.IntegerField(blank=True, null=True, verbose_name='サブNO')),
                ('work_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='工事名')),
                ('work_charge_process', models.CharField(blank=True, max_length=10, null=True, verbose_name='設備工程')),
                ('req_func', models.CharField(blank=True, max_length=20, null=True, verbose_name='要求機能')),
                ('department', models.CharField(blank=True, max_length=20, null=True, verbose_name='部署')),
                ('division', models.CharField(blank=True, max_length=20, null=True, verbose_name='部門')),
                ('format_kbn', models.CharField(blank=True, max_length=20, null=True, verbose_name='定型/非定型')),
                ('goods_construct_kbn', models.CharField(blank=True, max_length=20, null=True, verbose_name='物品/工事区分')),
                ('specification_person_in_charge', models.CharField(blank=True, max_length=20, null=True, verbose_name='仕様書担当者')),
                ('delivery_location', models.CharField(blank=True, max_length=100, null=True, verbose_name='納入場所')),
                ('desired_construct_period_from', models.DateField(blank=True, null=True, verbose_name='希望工期_FROM')),
                ('desired_construct_period_to', models.DateField(blank=True, null=True, verbose_name='希望工期_TO')),
                ('desired_delivery_date', models.DateField(blank=True, null=True, verbose_name='希望納期日')),
                ('estimate_submission_date', models.DateField(blank=True, null=True, verbose_name='見積提出期日')),
                ('order_limited_date', models.DateField(blank=True, null=True, verbose_name='発注期日')),
                ('scheduled_inspection_date_from', models.DateField(blank=True, null=True, verbose_name='品質/立会検査予定日_FROM')),
                ('scheduled_inspection_date_to', models.DateField(blank=True, null=True, verbose_name='品質/立会検査予定日_TO')),
                ('specification_data', models.CharField(blank=True, max_length=100, null=True, verbose_name='仕様書データ')),
                ('construction_outline', models.CharField(blank=True, max_length=400, null=True, verbose_name='工事概要')),
                ('contents_detail1', models.CharField(blank=True, max_length=3600, null=True, verbose_name='内容詳細1')),
                ('contents_detail2', models.CharField(blank=True, max_length=3600, null=True, verbose_name='内容詳細2')),
                ('contents_detail3', models.CharField(blank=True, max_length=3600, null=True, verbose_name='内容詳細3')),
                ('contents_detail4', models.CharField(blank=True, max_length=3600, null=True, verbose_name='内容詳細4')),
                ('contents_detail5', models.CharField(blank=True, max_length=3600, null=True, verbose_name='内容詳細5')),
                ('procurement_person_in_charge', models.CharField(blank=True, max_length=20, null=True, verbose_name='調達担当者')),
                ('management_class_cd', models.CharField(blank=True, max_length=2, null=True, verbose_name='管理区分CD')),
                ('scheduled_acceptance_date_from', models.DateField(blank=True, null=True, verbose_name='品質/受入検査予定日_FROM')),
                ('scheduled_acceptance_date_to', models.DateField(blank=True, null=True, verbose_name='品質/受入検査予定日_TO')),
                ('preparation_delivery_date', models.DateField(blank=True, null=True, verbose_name='引渡準備完了日')),
                ('candidate_vendor1', models.CharField(blank=True, max_length=50, null=True, verbose_name='候補業者1')),
                ('candidate_vendor2', models.CharField(blank=True, max_length=50, null=True, verbose_name='候補業者2')),
                ('candidate_vendor3', models.CharField(blank=True, max_length=50, null=True, verbose_name='候補業者3')),
                ('candidate_vendor4', models.CharField(blank=True, max_length=50, null=True, verbose_name='候補業者4')),
                ('candidate_vendor5', models.CharField(blank=True, max_length=50, null=True, verbose_name='候補業者5')),
                ('memo', models.CharField(blank=True, max_length=400, null=True, verbose_name='備考')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('cancel_flag', models.IntegerField(blank=True, null=True, verbose_name='中止FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
                ('probable_price', models.BigIntegerField(blank=True, null=True, verbose_name='予想額')),
                ('special_vendor_check', models.BooleanField(blank=True, null=True, verbose_name='特命チェック')),
                ('special_vendor_comment', models.CharField(blank=True, max_length=400, null=True, verbose_name='特命コメント')),
                ('special_vendor_si_comment', models.CharField(blank=True, max_length=400, null=True, verbose_name='調達G特命コメント')),
            ],
        ),
        migrations.CreateModel(
            name='ProVendorEvaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算ID')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNO')),
                ('budget_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='予算NO')),
                ('budget_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='予算名')),
                ('construction_id', models.IntegerField(blank=True, null=True, verbose_name='工事ID')),
                ('sub_id', models.IntegerField(blank=True, null=True, verbose_name='サブNO')),
                ('estimate_assessment_evaluation_sum', models.CharField(blank=True, max_length=400, null=True, verbose_name='見積査定評価まとめ')),
                ('candidate_vendor_comment1', models.CharField(blank=True, max_length=400, null=True, verbose_name='候補業者1コメント')),
                ('candidate_vendor_comment2', models.CharField(blank=True, max_length=400, null=True, verbose_name='候補業者2コメント')),
                ('candidate_vendor_comment3', models.CharField(blank=True, max_length=400, null=True, verbose_name='候補業者3コメント')),
                ('candidate_vendor_comment4', models.CharField(blank=True, max_length=400, null=True, verbose_name='候補業者4コメント')),
                ('candidate_vendor_comment5', models.CharField(blank=True, max_length=400, null=True, verbose_name='候補業者5コメント')),
                ('eva_final_price', models.CharField(blank=True, max_length=400, null=True, verbose_name='最終金額評価')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='更新者')),
            ],
        ),
        migrations.CreateModel(
            name='PurposeClassMaster',
            fields=[
                ('purpose_class_cd', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='目的区分CD')),
                ('purpose_class_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='目的区分名')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='RadiationHazardsAppMotiveMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='使用/変更')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='RegulationMaster',
            fields=[
                ('regulation_cd', models.CharField(max_length=5, primary_key=True, serialize=False, verbose_name='法令CD')),
                ('regulation_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='法令名')),
                ('rem', models.CharField(blank=True, max_length=200, null=True, verbose_name='備考')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='RequiredSpecification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算id')),
                ('budget_rev_no', models.IntegerField(blank=True, null=True, verbose_name='予算RevNo')),
                ('no', models.IntegerField(blank=True, null=True, verbose_name='No')),
                ('required_spec', models.TextField(blank=True, max_length=2000, null=True, verbose_name='要求仕様')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='SafetyHealthDeleteriousMotiveNtfcMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='設置/変更')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='SafetyHealthDeleteriousNtfcCategoryMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='SafetyHealthEquipNtfcCategoryMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='SafetyHealthEquipNtfcMotiveMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='設置/変更')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='SafetyHealthInstallationReportCategoryMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='SafetyHealthSpecifiedEquipNtfcCategoryMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=20, null=True, verbose_name='種類')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='SafetyHealthSpecifiedEquipNtfcMotiveMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='設置/変更')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='SpecmanAttrs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(blank=True, max_length=5, null=True, verbose_name='管理区分')),
                ('eqp_family', models.CharField(blank=True, max_length=5, null=True, verbose_name='機器ファミリー')),
                ('column_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='カラム名')),
                ('seq_no', models.IntegerField(blank=True, null=True, verbose_name='SEQ_NO')),
                ('hdr_text', models.CharField(blank=True, max_length=40, null=True, verbose_name='カラム表記名')),
                ('unit_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='単位名')),
                ('list_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='リスト名')),
                ('init_value', models.CharField(blank=True, max_length=20, null=True, verbose_name='初期値')),
                ('using_type', models.CharField(blank=True, max_length=200, null=True, verbose_name='使用機器型')),
            ],
        ),
        migrations.CreateModel(
            name='StepAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_id', models.IntegerField(blank=True, null=True, verbose_name='工程id')),
                ('action_cd', models.CharField(blank=True, max_length=20, null=True, verbose_name='作業CD')),
                ('next_step', models.IntegerField(blank=True, null=True, verbose_name='次工程id')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('target', models.CharField(blank=True, max_length=40, null=True, verbose_name='対象')),
            ],
        ),
        migrations.CreateModel(
            name='StepDisplayItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step', models.IntegerField(blank=True, null=True, verbose_name='工程')),
                ('page', models.IntegerField(blank=True, null=True, verbose_name='ページNO')),
                ('div_id_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='div_id名')),
                ('item_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='item名')),
                ('action_pb_flag', models.IntegerField(blank=True, null=True, verbose_name='ボタン表示FL')),
                ('default_page', models.IntegerField(blank=True, null=True, verbose_name='初期ページ')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='StepFunctionUserMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_order', models.IntegerField(blank=True, null=True, verbose_name='部署内優先順位')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.DepartmentMaster', verbose_name='部署')),
            ],
        ),
        migrations.CreateModel(
            name='StepMaster',
            fields=[
                ('step_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='工程id')),
                ('step_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='工程名')),
                ('next_step', models.IntegerField(blank=True, null=True, verbose_name='次工程id')),
                ('previous_step', models.IntegerField(blank=True, null=True, verbose_name='前工程id')),
                ('charge_department_class', models.CharField(blank=True, max_length=10, null=True, verbose_name='担当部署区分')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('step_level', models.IntegerField(blank=True, null=True, verbose_name='工程レベル')),
                ('link_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='リンク文字列')),
                ('template_class', models.CharField(blank=True, max_length=200, null=True, verbose_name='使用テンプレート')),
                ('new_entry_flag', models.IntegerField(blank=True, null=True, verbose_name='新規登録FL')),
                ('target', models.CharField(blank=True, max_length=200, null=True, verbose_name='対象')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('hidden_flag', models.IntegerField(blank=True, null=True, verbose_name='非表示FL')),
            ],
        ),
        migrations.CreateModel(
            name='StepNoticeMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_address', models.CharField(blank=True, max_length=150, null=True, verbose_name='通知先アドレス')),
                ('check_function', models.CharField(blank=True, max_length=150, null=True, verbose_name='通知判定用関数')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('step', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.StepMaster', verbose_name='工程id')),
            ],
        ),
        migrations.CreateModel(
            name='StepRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_id', models.IntegerField(blank=True, null=True, verbose_name='工程id')),
                ('next_step', models.IntegerField(blank=True, null=True, verbose_name='次工程id')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='StopWorkCause',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算ID')),
                ('construction_id', models.IntegerField(blank=True, null=True, verbose_name='工事ID')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('stop_work_cause_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='中止原因')),
                ('stop_work_reason', models.CharField(blank=True, max_length=200, null=True, verbose_name='中止理由')),
                ('stop_work_risk', models.CharField(blank=True, max_length=200, null=True, verbose_name='リスク')),
                ('approval_no', models.CharField(blank=True, max_length=15, null=True, verbose_name='決裁No')),
                ('target', models.CharField(blank=True, max_length=20, null=True, verbose_name='中止対象')),
                ('present_step', models.IntegerField(blank=True, null=True, verbose_name='中止時のステップ')),
                ('present_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='中止時の作業担当者')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='StopWorkCauseMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_work_cause_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='中止原因名')),
                ('target', models.CharField(blank=True, max_length=20, null=True, verbose_name='中止対象')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_id', models.IntegerField(blank=True, null=True, verbose_name='工事id')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('document_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='書類名')),
                ('number_of_copies', models.IntegerField(blank=True, null=True, verbose_name='部数')),
                ('submission_deadline', models.CharField(blank=True, max_length=50, null=True, verbose_name='提出期限')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('entry_class', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録区分')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionDocumentMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='書類名')),
                ('default_submission_deadline', models.CharField(blank=True, max_length=50, null=True, verbose_name='初期提出期限')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('default_number_of_copies', models.IntegerField(blank=True, null=True, verbose_name='初期部数')),
            ],
        ),
        migrations.CreateModel(
            name='SupplierMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_cd', models.CharField(max_length=10, verbose_name='仕入先コード')),
                ('supplier_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='仕入先名')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='Supplies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_id', models.IntegerField(blank=True, null=True, verbose_name='工事id')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('supplies_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='支給品')),
                ('entry_class', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録区分')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='SuppliesMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplies_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='支給品名')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='TargetMaster',
            fields=[
                ('target_cd', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='対象CD')),
                ('target_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='対象名')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='TaxMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_cd', models.CharField(max_length=2, verbose_name='税コード')),
                ('text', models.CharField(blank=True, max_length=50, null=True, verbose_name='テキスト')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='TemporaryMakePlantiaImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='UnitMaster',
            fields=[
                ('unit_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='単位id')),
                ('unit', models.CharField(blank=True, max_length=20, null=True, verbose_name='単位')),
                ('unit_class', models.CharField(blank=True, max_length=20, null=True, verbose_name='単位分類')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('username', models.CharField(max_length=150, primary_key=True, serialize=False, verbose_name='ユーザーid')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='名')),
                ('last_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='姓')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='UserAccessPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=150, null=True, verbose_name='ユーザー名')),
                ('permission', models.CharField(blank=True, max_length=40, null=True, verbose_name='アクセス許可')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='UserAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=150, null=True, verbose_name='ユーザー名')),
                ('department', models.CharField(blank=True, max_length=10, null=True, verbose_name='部署')),
                ('division', models.CharField(blank=True, max_length=10, null=True, verbose_name='部門')),
                ('authority', models.CharField(blank=True, max_length=10, null=True, verbose_name='権限')),
                ('confirm_username', models.CharField(blank=True, max_length=150, null=True, verbose_name='確認者')),
                ('permit_username', models.CharField(blank=True, max_length=150, null=True, verbose_name='承認者')),
                ('department_charge_flag', models.CharField(blank=True, max_length=10, null=True, verbose_name='部署担当フラグ')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('user_order', models.IntegerField(blank=True, null=True, verbose_name='部署内表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='WasteEquipAppMotiveMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motive', models.CharField(blank=True, max_length=20, null=True, verbose_name='設置/変更')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='WaterPollutionNtfcActionMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(blank=True, max_length=20, null=True, verbose_name='扱い')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='WaterPurificationTanksNtfcAmendmentMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amendment', models.CharField(blank=True, max_length=20, null=True, verbose_name='改廃')),
                ('lost_flag', models.BooleanField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_id', models.IntegerField(blank=True, null=True, verbose_name='工事id')),
                ('work_rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('work_budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算id')),
                ('work_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='工事名')),
                ('management_class_cd', models.CharField(blank=True, max_length=2, null=True, verbose_name='管理区分CD')),
                ('work_required_function', models.CharField(blank=True, max_length=20, null=True, verbose_name='要求機能')),
                ('sub_no', models.IntegerField(blank=True, null=True, verbose_name='サブNo')),
                ('delivery_location', models.CharField(blank=True, max_length=40, null=True, verbose_name='納入先')),
                ('work_start_date', models.DateField(blank=True, null=True, verbose_name='着工日')),
                ('work_end_date', models.DateField(blank=True, null=True, verbose_name='完工日')),
                ('work_delivery_date', models.DateField(blank=True, null=True, verbose_name='納期日')),
                ('estimate_date', models.DateField(blank=True, null=True, verbose_name='見積提出希望日')),
                ('work_estimate_limited_date', models.DateField(blank=True, null=True, verbose_name='見積提出期限')),
                ('work_question_limited_date', models.DateField(blank=True, null=True, verbose_name='質問受付期日')),
                ('work_answer_limited_date', models.DateField(blank=True, null=True, verbose_name='質問回答期日')),
                ('make_limited_date', models.DateField(blank=True, null=True, verbose_name='本仕様書作成期日')),
                ('order_limited_date', models.DateField(blank=True, null=True, verbose_name='発注期日')),
                ('fixed_form', models.CharField(blank=True, max_length=50, null=True, verbose_name='定型_非定型')),
                ('estimate_range', models.TextField(blank=True, max_length=400, null=True, verbose_name='見積範囲')),
                ('budget_material', models.IntegerField(blank=True, null=True, verbose_name='取扱い物質')),
                ('confidentiality', models.TextField(blank=True, max_length=4000, null=True, verbose_name='秘密保持条件')),
                ('warranty', models.TextField(blank=True, max_length=4000, null=True, verbose_name='瑕疵担保責任')),
                ('acceptance_conditions', models.TextField(blank=True, max_length=4000, null=True, verbose_name='検収条件')),
                ('witness_inspection', models.IntegerField(blank=True, null=True, verbose_name='立会検査有無')),
                ('acceptance_inspection', models.IntegerField(blank=True, null=True, verbose_name='受入検査有無')),
                ('test_run', models.IntegerField(blank=True, null=True, verbose_name='試運転有無')),
                ('test_run_pass', models.TextField(blank=True, max_length=4000, null=True, verbose_name='試運転の合格基準')),
                ('inspection_period', models.TextField(blank=True, max_length=4000, null=True, verbose_name='検査の期間')),
                ('Attachment_url', models.URLField(blank=True, max_length=400, null=True, verbose_name='添付資料格納')),
                ('work_rem', models.TextField(blank=True, max_length=400, null=True, verbose_name='備考')),
                ('last_plan_id', models.IntegerField(blank=True, null=True, verbose_name='前計画区分工事ID')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('cancel_flag', models.IntegerField(blank=True, null=True, verbose_name='中止FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
                ('plan_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.PlanClassMaster', verbose_name='計画区分')),
                ('work_charge_process', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.ProcessMaster', verbose_name='設備工程')),
            ],
        ),
        migrations.CreateModel(
            name='WorkClassMaster',
            fields=[
                ('work_class_cd', models.IntegerField(primary_key=True, serialize=False, verbose_name='物品/工事区分CD')),
                ('work_class_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='物品/工事区分名')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='表示順')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='WorkEquipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_id', models.IntegerField(blank=True, null=True, verbose_name='予算id')),
                ('work_id', models.IntegerField(blank=True, null=True, verbose_name='工事id')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('equip_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='機器NO')),
                ('equip_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='機器名')),
                ('management_class', models.CharField(blank=True, max_length=50, null=True, verbose_name='区分')),
                ('facility', models.CharField(blank=True, max_length=50, null=True, verbose_name='設備工程')),
                ('equipment_purchase', models.IntegerField(blank=True, null=True, verbose_name='機器購入')),
                ('construction', models.IntegerField(blank=True, null=True, verbose_name='工事')),
                ('equip_family', models.CharField(blank=True, max_length=50, null=True, verbose_name='機器ファミリー')),
                ('equip_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='機器タイプ')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='WorkLaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_id', models.IntegerField(blank=True, null=True, verbose_name='工事id')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('law_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='法令')),
                ('entry_class', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録区分')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
            ],
        ),
        migrations.CreateModel(
            name='WorkManagementClassMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('management_class_cd', models.CharField(blank=True, max_length=2, null=True, verbose_name='工事管理区分CD')),
                ('management_class_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='工事管理区分名')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
            ],
        ),
        migrations.CreateModel(
            name='WorkSpecMEX',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_id', models.IntegerField(blank=True, null=True, verbose_name='工事id')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('required_function_id', models.IntegerField(blank=True, null=True, verbose_name='要求機能id')),
                ('exchange_capacity', models.FloatField(blank=True, null=True, verbose_name='交換熱量')),
                ('exchange_area', models.FloatField(blank=True, null=True, verbose_name='伝熱面積')),
                ('hot_fluid', models.CharField(blank=True, max_length=40, null=True, verbose_name='高温物質')),
                ('hot_design_temperature', models.FloatField(blank=True, null=True, verbose_name='高温側設計温度')),
                ('hot_regular_use_temperature', models.FloatField(blank=True, null=True, verbose_name='高温側常用温度')),
                ('hot_input_temperature', models.FloatField(blank=True, null=True, verbose_name='高温側入口温度')),
                ('hot_output_temperature', models.FloatField(blank=True, null=True, verbose_name='高温側出口温度')),
                ('hot_fluid_capacity', models.FloatField(blank=True, null=True, verbose_name='高温物質流量')),
                ('hot_design_pressure', models.FloatField(blank=True, null=True, verbose_name='高温側設計圧力')),
                ('hot_regular_use_pressure', models.FloatField(blank=True, null=True, verbose_name='高温側常用圧力')),
                ('cool_fluid', models.CharField(blank=True, max_length=40, null=True, verbose_name='低温物質')),
                ('cool_design_temperature', models.FloatField(blank=True, null=True, verbose_name='低温側設計温度')),
                ('cool_regular_use_temperature', models.FloatField(blank=True, null=True, verbose_name='低温側常用温度')),
                ('cool_input_temperature', models.FloatField(blank=True, null=True, verbose_name='低温側入口温度')),
                ('cool_output_use_temperature', models.FloatField(blank=True, null=True, verbose_name='低温側出口温度')),
                ('cool_fluid_capacity', models.FloatField(blank=True, null=True, verbose_name='低温物質流量')),
                ('cool_design_pressure', models.FloatField(blank=True, null=True, verbose_name='低温側設計圧力')),
                ('cool_regular_use_pressure', models.FloatField(blank=True, null=True, verbose_name='低温側常用圧力')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
                ('required_function_sub_no', models.IntegerField(blank=True, null=True, verbose_name='要求機能サブNO')),
                ('entry_class', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録区分')),
                ('heat_exchange_rem', models.TextField(blank=True, max_length=400, null=True, verbose_name='備考')),
                ('cool_fluid_capacity_unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cool_fluid_capacity_unit', to='fms.AmountUnitMaster', verbose_name='低温物質流量単位')),
                ('cool_pressure_unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cool_pressure_unit', to='fms.PressureUnitMaster', verbose_name='圧力単位')),
                ('exchange_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.ExchangeTypeMaster', verbose_name='型式')),
                ('hot_fluid_capacity_unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='hot_fluid_capacity_unit', to='fms.AmountUnitMaster', verbose_name='高温物質流量単位')),
                ('hot_pressure_unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='hot_pressure_unit', to='fms.PressureUnitMaster', verbose_name='圧力単位')),
            ],
        ),
        migrations.CreateModel(
            name='WorkSpecMVE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_id', models.IntegerField(blank=True, null=True, verbose_name='工事id')),
                ('rev_no', models.IntegerField(blank=True, null=True, verbose_name='RevNo')),
                ('required_function_id', models.IntegerField(blank=True, null=True, verbose_name='要求仕様id')),
                ('stock_material', models.CharField(blank=True, max_length=40, null=True, verbose_name='物質')),
                ('stock_capacity', models.FloatField(blank=True, null=True, verbose_name='貯蔵量')),
                ('design_pressure', models.FloatField(blank=True, null=True, verbose_name='設計圧力')),
                ('regular_use_pressure', models.FloatField(blank=True, null=True, verbose_name='常用圧力')),
                ('design_temperature', models.FloatField(blank=True, null=True, verbose_name='設計温度')),
                ('regular_use_temperature', models.FloatField(blank=True, null=True, verbose_name='常用温度')),
                ('lost_flag', models.IntegerField(blank=True, null=True, verbose_name='無効FL')),
                ('entry_on_progress_flag', models.IntegerField(blank=True, null=True, verbose_name='登録中FL')),
                ('entry_datetime', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('entry_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録者')),
                ('update_datetime', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('update_operator', models.CharField(blank=True, max_length=20, null=True, verbose_name='変更者')),
                ('required_function_sub_no', models.IntegerField(blank=True, null=True, verbose_name='要求機能サブNO')),
                ('entry_class', models.CharField(blank=True, max_length=20, null=True, verbose_name='登録区分')),
                ('vessel_rem', models.TextField(blank=True, max_length=400, null=True, verbose_name='備考')),
                ('pressure_unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.PressureUnitMaster', verbose_name='圧力単位')),
                ('stock_capacity_unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.AmountUnitMaster', verbose_name='貯蔵量単位')),
            ],
        ),
        migrations.AddField(
            model_name='work',
            name='work_class',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.WorkClassMaster', verbose_name='物品/工事区分'),
        ),
        migrations.AddField(
            model_name='work',
            name='work_execution_charge_person',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='work_execution_charge_users', to='fms.User', verbose_name='実行担当者'),
        ),
        migrations.AddField(
            model_name='work',
            name='work_order_department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.DepartmentMaster', verbose_name='部署'),
        ),
        migrations.AddField(
            model_name='work',
            name='work_order_department_charge_person',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='work_order_department_charge_users', to='fms.User', verbose_name='原課担当者'),
        ),
        migrations.AddField(
            model_name='work',
            name='work_planning_charge_person',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='work_planning_charge_users', to='fms.User', verbose_name='計画担当者'),
        ),
        migrations.AddField(
            model_name='temporarymakeplantiaimport',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.User', verbose_name=' ユーザーid'),
        ),
        migrations.AddField(
            model_name='stepnoticemaster',
            name='target',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.TargetMaster', verbose_name='対象CD'),
        ),
        migrations.AddField(
            model_name='stepfunctionusermaster',
            name='step',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.StepMaster', verbose_name='該当ステップ'),
        ),
        migrations.AddField(
            model_name='stepfunctionusermaster',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.User', verbose_name='ユーザー名'),
        ),
        migrations.AddField(
            model_name='phenomenon',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.User', verbose_name=' 発見者'),
        ),
        migrations.AddField(
            model_name='mybudgetmaterialdata',
            name='pressure_unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.PressureUnitMaster', verbose_name='圧力単位'),
        ),
        migrations.AddField(
            model_name='mybudgetmaterialdata',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.MaterialStateMaster', verbose_name='状態'),
        ),
        migrations.AddField(
            model_name='measure',
            name='work_order_department_charge_person',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='work_order_department_charge_users2', to='fms.User', verbose_name='原課担当者'),
        ),
        migrations.AddField(
            model_name='materialmaster',
            name='pressure_unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.PressureUnitMaster', verbose_name='圧力単位'),
        ),
        migrations.AddField(
            model_name='materialmaster',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.MaterialStateMaster', verbose_name='状態'),
        ),
        migrations.AddField(
            model_name='maintenancechargepersonmastar',
            name='mng_charge_person',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.User', verbose_name='保全G担当者'),
        ),
        migrations.AddField(
            model_name='equipmenthistoryreport',
            name='phenomenon',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.Phenomenon', verbose_name=' 案件NO'),
        ),
        migrations.AddField(
            model_name='displayrequireditemforfunction',
            name='required_function',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.FunctionMaster', verbose_name='要求機能'),
        ),
        migrations.AddField(
            model_name='displayitemforheatexchange',
            name='exchange_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.ExchangeTypeMaster', verbose_name='型式'),
        ),
        migrations.AddField(
            model_name='departmentmaster',
            name='area_manager',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.User', verbose_name='エリア管理者'),
        ),
        migrations.AddField(
            model_name='checklistdepartmentrelation',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fms.DepartmentMaster', verbose_name='所管部署'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='check_departments',
            field=models.ManyToManyField(through='fms.CheckListDepartmentRelation', to='fms.DepartmentMaster', verbose_name='所管部署'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='check_items',
            field=models.ManyToManyField(through='fms.CheckListItemRelation', to='fms.CheckItemMaster', verbose_name='チェック項目'),
        ),
        migrations.AddField(
            model_name='checkitemmaster',
            name='assign_departments',
            field=models.ManyToManyField(blank=True, to='fms.DepartmentMaster'),
        ),
        migrations.AddField(
            model_name='budgetrequiredfunction',
            name='concentration_unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.ConcentrationUnitMaster', verbose_name='濃度単位'),
        ),
        migrations.AddField(
            model_name='budgetrequiredfunction',
            name='material_capacity_unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.AmountUnitMaster', verbose_name='量単位'),
        ),
        migrations.AddField(
            model_name='budgetrequiredfunction',
            name='pressure_unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.PressureUnitMaster', verbose_name='圧力単位'),
        ),
        migrations.AddField(
            model_name='budgetrequiredfunction',
            name='required_function',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.FunctionMaster', verbose_name='要求機能'),
        ),
        migrations.AddField(
            model_name='budgetrelationdepartment',
            name='budget_relation_department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.DepartmentMaster', verbose_name='関連部署'),
        ),
        migrations.AddField(
            model_name='budgetregulation',
            name='budget_regulation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.RegulationMaster', verbose_name='関係法令'),
        ),
        migrations.AddField(
            model_name='budgetmaterial',
            name='concentration_unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.ConcentrationUnitMaster', verbose_name='濃度単位'),
        ),
        migrations.AddField(
            model_name='budgetmaterial',
            name='pressure_unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.PressureUnitMaster', verbose_name='圧力単位'),
        ),
        migrations.AddField(
            model_name='budgetmaterial',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.MaterialStateMaster', verbose_name='状態'),
        ),
        migrations.AddField(
            model_name='budgetconditionrelation',
            name='next_step',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='budgetconditionrelation_next_step', to='fms.StepMaster', verbose_name='次工程'),
        ),
        migrations.AddField(
            model_name='budgetconditionrelation',
            name='this_step',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='budgetconditionrelation_this_step', to='fms.StepMaster', verbose_name='元工程'),
        ),
        migrations.AddField(
            model_name='budgetcondition',
            name='budget_condition',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.BudgetConditionMaster', verbose_name='予算状態'),
        ),
        migrations.AddField(
            model_name='budgetcarryforward',
            name='carry_forward_year_from',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='budget_carry_forward_year_from', to='fms.BusinessYearMaster', verbose_name='繰越元年度'),
        ),
        migrations.AddField(
            model_name='budgetcarryforward',
            name='carry_forward_year_to',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='budget_carry_forward_year_to', to='fms.BusinessYearMaster', verbose_name='繰越先年度'),
        ),
        migrations.AddField(
            model_name='budget',
            name='area_manager',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='budget_area_manager', to='fms.User', verbose_name='エリア管理者'),
        ),
        migrations.AddField(
            model_name='budget',
            name='budget_class',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.BudgetClassMaster', verbose_name='工事区分'),
        ),
        migrations.AddField(
            model_name='budget',
            name='budget_department_charge_person',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.User', verbose_name='原課担当者'),
        ),
        migrations.AddField(
            model_name='budget',
            name='budget_main_department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.DepartmentMaster', verbose_name=' 主部署'),
        ),
        migrations.AddField(
            model_name='budget',
            name='budget_person',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='budget_budget_person', to='fms.User', verbose_name='予算担当者'),
        ),
        migrations.AddField(
            model_name='budget',
            name='business_year',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.BusinessYearMaster', verbose_name='年度'),
        ),
        migrations.AddField(
            model_name='budget',
            name='facility_process',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.ProcessMaster', verbose_name='設備工程'),
        ),
        migrations.AddField(
            model_name='budget',
            name='importance_criteria',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='budget_importance_criteria', to='fms.EvaluationCriteriaMaster', verbose_name='重要度評価基準id'),
        ),
        migrations.AddField(
            model_name='budget',
            name='importance_point',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='budget_importance_point', to='fms.EvaluationPointMaster', verbose_name='重要度評価点数id'),
        ),
        migrations.AddField(
            model_name='budget',
            name='mpaln_evaluation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='budget_mpaln_evaluation', to='fms.EvaluationCriteriaMaster', verbose_name='中計評価id'),
        ),
        migrations.AddField(
            model_name='budget',
            name='mplan_basis',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.MPlanBasisMaster', verbose_name='中計申請希望額根拠'),
        ),
        migrations.AddField(
            model_name='budget',
            name='period_class',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.PeriodClassMaster', verbose_name='期区分'),
        ),
        migrations.AddField(
            model_name='budget',
            name='plan_class',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.PlanClassMaster', verbose_name='計画区分'),
        ),
        migrations.AddField(
            model_name='budget',
            name='purpose_class',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fms.PurposeClassMaster', verbose_name='目的区分'),
        ),
        migrations.AddField(
            model_name='budget',
            name='urgency_criteria',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='budget_urgency_criteria', to='fms.EvaluationCriteriaMaster', verbose_name='緊急度評価基準id'),
        ),
        migrations.AddField(
            model_name='budget',
            name='urgency_point',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='budget_urgency_point', to='fms.EvaluationPointMaster', verbose_name='緊急度評価点数id'),
        ),
    ]
